---
title: "The Austrian Corona Panel Project"
author: "Fabian Kalleitner"
date: "06/11/2022"
output:
  word_document:
    toc: true
  html_document:
    df_print: paged
    toc: true
---

```{r setup, include=FALSE}
library("foreign")
#library("codebook")
library("tidyverse")
library("haven")
library("fastDummies")
#library("hrbrthemes")
library("weights")
library("srvyr")
#library("gganimate")
library("ggthemes")
library("panelr")
library("ggpubr")
library("RColorBrewer")

knitr::opts_chunk$set(
  warning = TRUE, 
  message = TRUE, 
  error = TRUE, 
  echo = TRUE,
  dev.args = list(png = list(type = "cairo"))
)
ggplot2::theme_set(ggplot2::theme_bw())
pander::panderOptions("table.split.table", Inf)


```

# Erste ausgewählte Ergebnisse aus den Längsschnittdaten

## Einleitung
Dieses Dokument zeigt verschiedene Graphentypen der zentralen Variablen des Austrian Corona Panel Projects der W1-34. Ziel ist es möglichst einfach und klar die zeitlichen Veränderungen zu erkennen. Deshalb fokussiert das Dokument auf Variablen, die in mehreren Wellen abgefragt wurden. Dies ist keine Vollständige Auflistung aller Variablen. Siehe für diese das Codebook.

```{r data import, include = FALSE}
#setwd("Y:/Wirtschaftssoziologie/Corona/Corona_Panel_Analyse")
#bern_data_long2_factored = readRDS("./../../data/processed/W1-25_CORONAPANEL_recoded.rds")
bern_data_long2_factored = readRDS("C:/Users/Kalleitner/Documents/R/W1-34_CORONAPANEL_recoded.rds")

#bern_data_long2_factored <- bern_data_long2_factored %>% mutate_if(is.factor, ~(na_if(.,"Weiss nicht")))
#bern_data_long2_factored <- bern_data_long2_factored %>% mutate_if(is.factor, ~(na_if(.,"keine Angabe")))

color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
coloursample=sample(color, 34)

bern_data_long2_factored = bern_data_long2_factored
bern_data_long2_factored$wavedate <- as_factor(as.character(bern_data_long2_factored$wave))

#median(as.Date(bern_data_long2_factored$START_DATE[bern_data_long2_factored$wave==34],"%y-%m-%d"),na.rm=TRUE)

levels(bern_data_long2_factored$wavedate) <-c("28.03.2020", "04.04.2020", "11.04.2020","17.04.2020","25.04.2020","03.05.2020","09.05.2020","16.05.2020","24.05.2020","29.05.2020","13.06.2020","27.06.2020","11.07.2020","15.08.2020","12.09.2020","17.10.2020","14.11.2020","13.12.2020","16.01.2021","13.02.2021","13.03.2021","16.04.2021","22.05.2021","26.06.2021","25.09.2021","23.10.2021","26.11.2021","14.01.2022","18.02.2022","18.03.2022","22.04.2022","21.05.2022","21.10.2022","17.02.2023")
bern_data_long2_factored$wavedate = as.Date(bern_data_long2_factored$wavedate, "%d.%m.%Y")

##############################
#RECODING
##############################

bern_data_long2_factored <- bern_data_long2_factored %>% mutate( 
  edu4= ifelse(SD_EDU == "Volksschule oder weniger" | SD_EDU == "Hauptschule oder AHS Unterstufe" | SD_EDU == "Polytechnikum, BMS (Fachschule, z.B. HASCH)", "primary",
         ifelse(SD_EDU == "Lehre, Berufsschule", "Lehre", 
         ifelse(SD_EDU == "AHS mit Matura" | SD_EDU == "BHS mit Matura (z.B. HTL, HAK, HBLA etc.)" | SD_EDU == "Hochschulverwandte Lehranstalt oder Kolleg", "secondary",
        ifelse(SD_EDU == "Bachelor" | SD_EDU == "Magister / Master / Diplomingenieur / Fachhochschule" | SD_EDU == "Doktor / PhD", "tertiary",NA)))))

bern_data_long2_factored$edu4 <- as.factor(bern_data_long2_factored$edu4)

bern_data_long2_factored$edu4 <- fct_relevel(bern_data_long2_factored$edu4, "primary","Lehre","secondary","tertiary" )

bern_data_long2_factored <- bern_data_long2_factored %>% mutate(alter=2020-SD_BIRTHYEAR)

bern_data_long2_factored <- bern_data_long2_factored %>% mutate(alter_g=ifelse(alter<30,"<30",
                                                                               ifelse(alter>=30&alter<60,"30-59",
                                                                               ifelse(alter>=60,">60",NA))))

bern_data_long2_factored$alter_g <- as.factor(bern_data_long2_factored$alter_g)

bern_data_long2_factored$alter_g <- fct_relevel(bern_data_long2_factored$alter_g, "<30", "30-59", ">60")

```

## Wahrnehmung der Corona-Krise 

### Einschätzung der gesundheitlichen Gefahr


```{r gesundheitliche Gefahr, echo=FALSE, fig.width=9, fig.height=5, results='asis'}
#GESUNDHEITLICH#########################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD))

data_long <- gather(lr_gen_w1, condition, measurement, ges_per_gefahr:ges_pub_gefahr, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>% 
  summarise(n=survey_total(vartype = c("se")))

data_plot_long<-data_plot_long %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Persönlich", "Für die österr. Bevölkerung")
levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

data_plot_long$measurement <- fct_relevel(data_plot_long$measurement, "sehr klein", "klein", "mittelmäßig", "groß", "sehr groß")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="",title="Einschätzung der gesundheitlichen Gefahr") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_gesundh.png", units="in", width=6.8, height=4, type="cairo-png")

#mean line attention recoding 5= sehr groß 1= sehr klein
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)

#data_plot_long$wave<-as.factor(data_plot_long$wave)
#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Persönlich", "Für die österr. Bevölkerung")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung der gesundheitlichen Gefahr \n (1 sehr klein - 5 sehr groß)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_gesundh.png", units="in", width=8, height=5, type="cairo-png")

```

### Einschätzung der wirtschaftlichen Gefahr

```{r wirtschaftliche gefahr, echo=FALSE, fig.width=9, fig.height=5, results='asis'}  
#WIRTSCHAFTLICH#########################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD))

data_long <- gather(lr_gen_w1, condition, measurement, c(wir_per_gefahr,wir_pub_gefahr), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Persönlich", "Für die österr. Bevölkerung")
levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")
data_plot_long$measurement <- fct_relevel(data_plot_long$measurement, "sehr klein", "klein", "mittelmäßig", "groß", "sehr groß")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_wirtsch.png", units="in", width=8, height=5, type="cairo-png")


#mean line attention recoding 5= sehr groß 1= sehr klein
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)

#data_plot_long$wave<-as.factor(data_plot_long$wave)
#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Persönlich", "Für die österr. Bevölkerung")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")
cat("  \n")
# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung der wirtschaftlichen Gefahr \n (1 sehr klein - 5 sehr groß)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_wirtsch.png", units="in", width=8, height=5, type="cairo-png")

```


### Einschätzung der gesundheitlichen Gefahr nach Altersgruppe


```{r gesundheitliche GefahrnAlter, echo=FALSE, fig.width=9, fig.height=5, results='asis'}
#GESUNDHEITLICH#########################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD))

data_long <- gather(lr_gen_w1, condition, measurement, c(ges_per_gefahr,ges_pub_gefahr), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,alter_g,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,alter_g,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Persönlich", "Für die österr. Bevölkerung")
levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

data_plot_long$measurement <- fct_relevel(data_plot_long$measurement, "sehr klein", "klein", "mittelmäßig", "groß", "sehr groß")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 1)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="",title="Einschätzung der gesundheitlichen Gefahr") +
    facet_grid(alter_g~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_stack_gesundh_byage.png", units="in", width=8, height=8, type="cairo-png")

#mean line attention recoding 5= sehr groß 1= sehr klein
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,alter_g,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,alter_g,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)

#data_plot_long$wave<-as.factor(data_plot_long$wave)
#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Persönlich", "Für die österr. Bevölkerung")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = alter_g,group=interaction(condition,alter_g))) +
  geom_line(aes(linetype=condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung der gesundheitlichen Gefahr \n (1 sehr klein - 5 sehr groß)", x= "",colour="",linetype="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) + 
    #scale_x_discrete(guide = guide_axis(n.dodge = 2))+
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_gesundh_byage.png", units="in", width=8, height=5, type="cairo-png")

```

### Einschätzung der wirtschaftlichen Gefahr nach Altersgruppe

```{r wirtschaftliche gefahrnAlter, echo=FALSE, fig.width=9, fig.height=5, results='asis'}  
#WIRTSCHAFTLICH#########################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) 

data_long <- gather(lr_gen_w1, condition, measurement, wir_per_gefahr:wir_pub_gefahr, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,alter_g,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,alter_g,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Persönlich", "Für die österr. Bevölkerung")
levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")
data_plot_long$measurement <- fct_relevel(data_plot_long$measurement, "sehr klein", "klein", "mittelmäßig", "groß", "sehr groß")


# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
   geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
  geom_text(aes(label=round(prop*100, digits = 1)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="",title="Einschätzung der wirtschaftlichen Gefahr") +
    facet_grid(alter_g~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))+
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_stack_wirtsch_byage.png", units="in", width=8, height=5, type="cairo-png")


#mean line attention recoding 5= sehr groß 1= sehr klein
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,alter_g,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,alter_g,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Persönlich", "Für die österr. Bevölkerung")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")
cat("  \n")
# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = alter_g,group=interaction(condition,alter_g))) +
  geom_line(aes(linetype=condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung der wirtschaftlichen Gefahr \n (1 sehr klein - 5 sehr groß)", x= "",colour="",linetype="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) + 
   # scale_x_discrete(guide = guide_axis(n.dodge = 2))+
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_wirtsch_byage.png", units="in", width=8, height=5, type="cairo-png")

```

### Ansteckungsgefahr

```{r ansteckungsgefahr, echo=FALSE, fig.width=9, fig.height=5, results='asis'}  
#ansteckungsgefahr###################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(anst_rest,anst_oeff,anst_arbe,anst_schu,anst_park,anst_arzt,anst_fami,anst_freu), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Restaurants/Bars","Öffentliche Verkehrsmittel", "Arbeitsstätte","Schulen und Kindergärten","Parks und Spielpätze","Arzt","Familienfeiern","Zuhause bei Freunden")
levels(data_plot_long$measurement) <- c("sehr gross", "gross", "mittelmaessig", "klein", "sehr klein")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_stack_ansgefahr.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W27","W30")
levels(data_plot_long_mean$condition) <- c("Restaurants/Bars","Öffentliche Verkehrsmittel", "Arbeitsstätte","Schulen und Kindergärten","Parks und Spielpätze","Arzt","Familienfeiern","Zuhause bei Freunden")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 sehr klein - 5 sehr gross)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=3,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_ansgefahr.png", units="in", width=8, height=5, type="cairo-png")

```

### Corona-Ampel

```{r corona_ampel, echo=FALSE, fig.width=9, fig.height=5, results='asis'}  
#corona_ampel###################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(ampel_inf,ampel_tun,ampel_ovr,ampel_avr), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W15","W16")
levels(data_plot_long$condition) <- c("Fühle mich\ngut informiert","weiss, was\nich tun soll", "richte mein Verhalten\nan Ampel aus","andere richten ihr Verhalten\nan Ampel aus")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu","Kenne die Corona-Ampel nicht")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_cor_ampel.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W15","W16")
levels(data_plot_long_mean$condition) <- c("Fühle mich\ngut informiert","weiss, was\nich tun soll", "richte mein Verhalten\nan Ampel aus","andere richten ihr Verhalten\nan Ampel aus")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Ich kenne die Corona-Ampel nicht - 5 Trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_cor_ampel.png", units="in", width=8, height=5, type="cairo-png")

```

### Testen lassen

```{r testen, echo=FALSE, fig.width=9, fig.height=5, results='asis'}  
#(Massen)test Einstellungen###################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(getestet_new), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "Ich habe mich nicht testen lassen.","1 Mal", "2 Mal", "3 Mal", "4 Mal","Mehr als 4 Mal")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Habe mich in d. letzten vier Wochen auf Covid-19 testen lassen")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition, ncol = 6) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_testenl.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave) <-c("W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Habe mich in d. letzten vier Wochen auf Covid-19 testen lassen")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Anzahl getestet  \n (0 Mal - 5 Mehr als 4 Mal)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=3,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_testenl.png", units="in", width=8, height=5, type="cairo-png")

```

### (Massen)test Einstellungen

```{r test_einstell, echo=FALSE, fig.width=9, fig.height=5, results='asis'}  
#(Massen)test Einstellungen###################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(mastest_anm,mastest_dur,mastest_woh,mastest_war,mastest_eff,mastest_zuv,mastest_tre,mastest_ver,mastest_pri,mastest_qua,mastest_str), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Anmeldung\nproblemlos","Durchführung\nprofessionell", "Teststation weit\nentfernt","Lange\nMenschenschlangen","Effektive\nMaßnahme","Ergebnis\nzuverlässig","Negativ=\nPersonen treffen","Trotz negativen\nvirus verbreitbar","Privater Test\nvor Weihnachten","Quarantäne\nnicht leistbar","Strengere Maßnahmen\nfür Personen ohne Test")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu","Kenne die Corona-Ampel nicht")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition, ncol = 6) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_test_einstell.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(5-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave) <-c("W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Anmeldung\nproblemlos","Durchführung\nprofessionell", "Teststation weit\nentfernt","Lange\nMenschenschlangen","Effektive\nMaßnahme","Ergebnis\nzuverlässig","Negativ=\nPersonen treffen","Trotz negativen\nvirus verbreitbar","Privater Test\nvor Weihnachten","Quarantäne\nnicht leistbar","Strengere Maßnahmen\nfür Personen ohne Test")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Trifft überhaupt nicht zu - 4 Trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=3,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_test_einstell.png", units="in", width=8, height=5, type="cairo-png")

```

## Impfung

### Impfstatus + Impfstoff


```{r impfstatus, echo=FALSE, fig.width=9, fig.height=5, results='asis'}  
#Impfung erhalten###################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(geimpft,geim_boost), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Wurde bereits geimpft","Geimpft: Booster")
#levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu","Kenne die Corona-Ampel nicht")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition, ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_impfung.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")
#Beide Dosen#############################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(geim_beide), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Beide Dosen erhalten")
#levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu","Kenne die Corona-Ampel nicht")


# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="",caption="Basis geimpfte ohne J&J") +
    facet_wrap(~condition, ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_impfung.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#Impfstoff#############################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(geim_impfs), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)
data_long$measurement <- fct_relevel(data_long$measurement, "BioNTech-Pfizer", "AstraZeneca", "Moderna", "Johnson & Johnson", "Sputnik V","Einen anderen Impfstoff")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Erhaltener Impfstoff")
#levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu","Kenne die Corona-Ampel nicht")


# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "Set2", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="",caption="Basis geimpfte") +
    facet_wrap(~condition, ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_impfung.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")
```

### Impfstoffe, Impfbereitschaft

```{r impfbereits, echo=FALSE, fig.width=9, fig.height=5, results='asis'}  
#Impfung###################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(impfs_bnp,impfs_asz,impfs_mod,impfs_jaj,impfs_spv), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("BioNTech-Pfizer", "AstraZeneca", "Moderna", "Johnson & Johnson", "Sputnik V")
#levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu","Kenne die Corona-Ampel nicht")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="",caption="Achtung Filter a W23 für ehestmöglich impfen: nur wenn nicht geimpft") +
    facet_wrap(~condition, ncol = 3) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=3,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_impfbers.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)&measurement!="kenne ich nicht") %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean((as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave) <-c("W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("BioNTech-Pfizer", "AstraZeneca", "Moderna", "Johnson & Johnson", "Sputnik V")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Impfen lassen  \n (0 auf gar keinen Fall - 4 auf jeden Fall)", x= "",colour="",caption="Achtung Filter ab W23 für ehestmöglich impfen: nur wenn nicht geimpft") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=3,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_impfbers.png", units="in", width=8, height=5, type="cairo-png")

```

### Impfbatterie

```{r impfung, echo=FALSE, fig.width=9, fig.height=7, results='asis'}  
#Impfung###################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(impf_ehe,impf_pfl,impf_gra,impf_pfb,impf_sof,impf_unf,impf_soz,impf_kin,impf_ein,impf_boo), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W9","W16","W18","W19","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Werde mich\nehestmöglich\nimpfen","Impflicht\nfür alle", "Gratis\nImpfstoff ","Impfpflicht für\nhochrisiko\nBerufsgruppen","Sollte Möglichkeit\nhaben, mich\nimpfen zu lassen","Unfair, dass\nbest. Personengr.\nfrüher geimpft","Meiste Personen\nim Umfeld\nlassen sich impfen","werde Kind(er)\nehestmöglich\nimpfen lassen","Staat sollte zu\nImpfung\neinladen","Werde Booster-\nAuffrischungs-/Drittimpfung\nin Anspruch nehmen")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu","Kenne die Corona-Ampel nicht")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="",caption="Achtung Filter ab W23 für ehestmöglich impfen: nur wenn nicht geimpft") +
    facet_wrap(~condition, ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_impfung.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(5-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave) <-c("W9","W16","W18","W19","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Werde mich\nehestmöglich\nimpfen","Impflicht\nfür alle", "Gratis\nImpfstoff ","Impfpflicht für\nhochrisiko\nBerufsgruppen","Sollte Möglichkeit\nhaben, mich\nimpfen zu lassen","Unfair, dass\nbest. Personengr.\nfrüher geimpft","Meiste Personen\nim Umfeld\nlassen sich impfen","werde Kind(er)\nehestmöglich\nimpfen lassen","Staat sollte zu\nImpfung\neinladen","Werde Booster-\nAuffrischungs-/Drittimpfung\nin Anspruch nehmen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Trifft überhaupt nicht zu - 4 Trifft voll und ganz zu)", x= "",colour="",caption="Achtung Filter ab W23 für ehestmöglich impfen: nur wenn nicht geimpft") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_impfung.png", units="in", width=8, height=5, type="cairo-png")+
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))

```

### Impfung Einstellungen

```{r impf_einstell, echo=FALSE, fig.width=9, fig.height=6, results='asis'}  
#IMpfung Einstellungen###################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(impfe_sor,impfe_imm,impfe_ini,impfe_leb,impfe_asc,impfe_aim,impfe_ssc,impfe_sic,impfe_inb,impfe_str), factor_key=TRUE)#impfe_and
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W18","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Sorgen\nüber\nNebenwirkungen","verlasse mich\nlieber auf\nImmunsystem", "fühle mich\ninformiert","Impfung erlaubt\nLeben wie\nvor Pandemie","Impfung kann\nich andere\nschützen","nur impfen\nwenn andere\nsich impfen","Impfung kann\nmich selbst\nschützen","Behördlich\nzugelassene\nImpfungen sicher","Behörden\ninformieren\nhinreichend","keine Zeit\nfür Impfung")#"warte auf\nanderen\nImpfstoff"
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu","Kenne die Corona-Ampel nicht")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition, ncol = 6) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_impf_einstell.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave) <-c("W18","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Sorgen\nüber\nNebenwirkungen","verlasse mich\nlieber auf\nImmunsystem", "fühle mich\ninformiert","Impfung erlaubt\nLeben wie\nvor Pandemie","Impfung kann\nich andere\nschützen","nur impfen\nwenn andere\nsich impfen","Impfung kann\nmich selbst\nschützen","Behördlich\nzugelassene\nImpfungen sicher","Behörden\ninformieren\nhinreichend","keine Zeit\nfür Impfung")#"warte auf\nanderen\nImpfstoff"
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Trifft überhaupt nicht zu - 5 Trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=3,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_impf_einstell.png", units="in", width=8, height=5, type="cairo-png")

```

### Einstellung: Umgang mit Corona

```{r umgangcorona, echo=FALSE, fig.width=9, fig.height=5, results='asis'}  
#(Massen)test Einstellungen###################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(umgcor_hart,umgcor_zero,umgcor_impf,umgcor_eigv,umgcor_lock), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W20","W28")
levels(data_plot_long$condition) <- c("Möglichst harte\nMaßnahmen für \n kürzere Krise", "Maßnahmen erst\n lockern wenn\nInfektionen bei Null","Sobald Risikogruppen\n geimpft \nalles öffnen","Alle Beschränkungen\naufheben und auf\nEigenverantwortung setzen.","Maßnahmen lockern\nauch wenn mehr\nCorona-Infizierte")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition, ncol = 6) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_umgang_cor.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(5-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W20","W28")
levels(data_plot_long_mean$condition) <- c("Möglichst harte\nMaßnahmen für \n kürzere Krise", "Maßnahmen erst\n lockern wenn\nInfektionen bei Null","Sobald Risikogruppen\n geimpft \nalles öffnen","Alle Beschränkungen\naufheben und auf\nEigenverantwortung setzen.","Maßnahmen lockern\nauch wenn mehr\nCorona-Infizierte")
cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Trifft überhaupt nicht zu - 5 Trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_umgang_cor.png", units="in", width=8, height=5, type="cairo-png")

```

## Auswirkungen der Corona-Krise

### Latente Deprivation, Familienkonflikte und Kinderbetreuung

```{r latente Deprivation, echo=FALSE, fig.width=9, fig.height=5, results='asis'}  
#latente deprivation###################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, wochentag:kinder, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Vergesse Wochentag", "Fehlt Kontakt","Habe Zeit","Konflikt Bez./Familie","Problem Kinderbetr.")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_stack_latent.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Vergesse Wochentag", "Fehlt Kontakt","Habe Zeit","Konflikt Bez./Familie","Problem Kinderbetr.")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 trifft gar nicht zu - 5 trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=3,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_latent.png", units="in", width=8, height=5, type="cairo-png")

```

### Depressionsneigung (Emotionen)

```{r depression, echo=FALSE, fig.width=9, fig.height=5}  


#depression###################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(depress_A1:depress_A9), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("ruhig und\ngelassen", "einsam","ärgerlich","nieder-\ngeschlagen","glücklich","nervös","ängstlich","traurig","voller\nEnergie")
data_plot_long$measurement <- fct_relevel(data_plot_long$measurement, "nie", "an manchen Tagen", "mehrmals die Woche", "beinahe jeden Tag", "taeglich")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1),strip.text.x = element_text(size = 9)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_stack_depress.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention redefining levels
data_long$measurement <- fct_relevel(data_long$measurement, "nie", "an manchen Tagen", "mehrmals die Woche", "beinahe jeden Tag", "taeglich")

data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("ruhig und gelassen", "einsam","ärgerlich","niedergeschlagen","glücklich","nervös","ängstlich","traurig","voller Energie")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 nie - 5 täglich)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_depress.png", units="in", width=8, height=5, type="cairo-png")


```

## Verhalten in der Krise

### Ausgehgründe und Häufigkeit

```{r ausgehgrunde, echo=FALSE, fig.width=9, fig.height=5}  



# Ausgehgründe###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(ausgeh_arbeit:ausgeh_andere,ausgeh_sonsbes), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "nie", "an manchen Tagen", "mehrmals die Woche", "beinahe jeden Tag", "taeglich")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Arbeit", "Sport","Freunde","Medi-\nkamente","Essen","Haustier","Langeweile","Andere","Sonstige\nBesorgungen")


cat("  \n")

levels(data_plot_long$condition) <- c("Arbeit", "Sport","Freunde","Medikamente","Essen","Haustier","Langeweile","Andere","Sonstige Besorgungen")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 3) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=7,nrow=3,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_ausgeh.png", units="in", width=8, height=5, type="cairo-png")

data_plot_long_res<-data_plot_long %>% filter(condition=="Langeweile"|condition=="Freunde")
ggplot(data_plot_long_res, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 3) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=7,nrow=3,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_ausgeh_res.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Arbeit", "Sport","Freunde","Medikamente","Essen","Haustier","Langeweile","Andere","Sonstige Besorgungen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 nie - 5 täglich)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_ausgeh.png", units="in", width=8, height=5, type="cairo-png")
 
```

```{r ausgehgrunde blog, echo=FALSE, fig.width=9, fig.height=5, include= FALSE, eval=FALSE}  



# Ausgehgründe###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(ausgeh_sport,ausgeh_freunde,ausgeh_langeweile), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "nie", "an manchen Tagen", "mehrmals die Woche", "beinahe jeden Tag", "täglich")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c( "Sport","Freunde","Langeweile")

cat("  \n")

levels(data_plot_long$condition) <- c("Arbeit", "Sport","Freunde","Medikamente","Essen","Haustier","Langeweile","Andere","Sonstige Besorgungen")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="" , title="Häufigkeit des Verlassens des Hauses") +
    facet_wrap(~condition,ncol = 3) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_ausgeh_blog.png", units="in", width=6.8, height=4)

cat("  \n")

#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Arbeit", "Sport","Freunde","Medikamente","Essen","Haustier","Langeweile","Andere","Sonstige Besorgungen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 nie - 5 täglich)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_ausgeh.png", units="in", width=8, height=5, type="cairo-png")
 
```

```{r ausgehgrunde blog2, echo=FALSE, fig.width=9, fig.height=5, include= TRUE}

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) 

lr_gen_w1$ausgehindex <- (as.numeric(lr_gen_w1$ausgeh_sport) + as.numeric(lr_gen_w1$ausgeh_freunde) + as.numeric(lr_gen_w1$ausgeh_langeweile))/3

#table(lr_gen_w1$ausgehindex)

lr_gen_w1$gesgefahrpersdich<-ifelse(lr_gen_w1$ges_per_gefahr=="1 = sehr gross"|lr_gen_w1$ges_per_gefahr=="2 = gross", "groß", ifelse(lr_gen_w1$ges_per_gefahr=="4 = klein"|lr_gen_w1$ges_per_gefahr=="5 = sehr klein","klein",NA))

#table(lr_gen_w1$gesgefahrpersdich,lr_gen_w1$ges_per_gefahr, useNA = c("always"))
                          
lr_gen_w1$gesgefahralledich<-ifelse(lr_gen_w1$ges_pub_gefahr=="1 = sehr gross"|lr_gen_w1$ges_pub_gefahr=="2 = gross", "groß", ifelse(lr_gen_w1$ges_pub_gefahr=="4 = klein"|lr_gen_w1$ges_pub_gefahr=="5 = sehr klein","klein",NA))
  
#table(lr_gen_w1$gesgefahralledich,lr_gen_w1$ges_pub_gefahr, useNA = c("always"))

##########

data_long <- gather(lr_gen_w1, condition, measurement, c(gesgefahrpersdich,gesgefahralledich), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)
data_long$wave<-as.factor(data_long$wave)

data_plot_long_mean <- data_long %>% filter(!is.na(measurement) & !is.na(ausgehindex)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(mean_ausgeh=survey_mean(ausgehindex,vartype = c("se"))) %>% group_by(wave,condition,measurement) %>%
     mutate(ymax=mean_ausgeh+1.96*mean_ausgeh_se, ymin=mean_ausgeh-1.96*mean_ausgeh_se)

levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Persönlich", "Für die österr. Bevölkerung")

levels(data_plot_long_mean$measurement) <- c("Große Gefahr", "Kleine Gefahr")


ggplot(data_plot_long_mean, aes(wave, mean_ausgeh, colour = measurement)) +
  geom_pointrange(aes(ymin = ymin, ymax = ymax)) +
   facet_wrap(~condition) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Mittelwert Ausgehverhalten \n (Summe Sport, Langeweile und Freunde treffen)", x= "",colour="", title="Nicht-essenzielles Ausgehverhalten\nnach Einschätzung der gesundheitlicher Gefahr") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE))  +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_ausgeh_blog.png", units="in", width=6.5, height=5, type="cairo-png")

```

### Kontakte letzte Woche

```{r kontakth, echo=FALSE, fig.width=9, fig.height=5}  

# Kontakte###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(anz_kont_lw))
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement,"Kein Kontakt mit Personen ausserhalb meines Haushalts.","1 Person", "2-3 Personen", "4-6 Personen", "7-10 Personen", "11-15 Personen","Mehr als 15 Personen")

levels(data_long$measurement)<-c("Kein Kontakt","1 Person", "2-3 Personen", "4-6 Personen", "7-10 Personen", "11-15 Personen","Mehr als 15 Personen")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
data_plot_long$condition<-as.factor(data_plot_long$condition)
levels(data_plot_long$condition) <- c("Anzahl Kontakte (Personen >18 außerhalb d. Haushalts)")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 3) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=7,nrow=3,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_ankont.png", units="in", width=8, height=5, type="cairo-png")


cat("  \n")

#mean line 1= nie 5= täglich

data_long <- data_long %>% mutate(measurement_con=ifelse(measurement=="Kein Kontakt",0,
                                                         ifelse(measurement=="1 Person",1,
                                                         ifelse(measurement=="2-3 Personen",2.5,
                                                         ifelse(measurement=="4-6 Personen",5,
                                                         ifelse(measurement=="7-10 Personen",8.5,
                                                         ifelse(measurement=="11-15 Personen",13,
                                                         ifelse(measurement=="Mehr als 15 Personen",18,NA))))))))

data_plot_long_mean <- data_long  %>% filter(!is.na(measurement_con)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(measurement_con,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave) <-c("W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
data_plot_long_mean$condition<-as.factor(data_plot_long_mean$condition)
levels(data_plot_long_mean$condition) <- c("Anzahl Kontakte (Personen >18 außerhalb d. Haushalts)")

#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Personen  \n (0=keine - 18=mehr als 15)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_ankont.png", units="in", width=8, height=5, type="cairo-png")
 
```

## Einstellungen Werte

### Zweite Welle

```{r zweite_welle, echo=FALSE, fig.width=9, fig.height=5}  


# Zweite W###################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, danger_2wave, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W12","W13","W14","W15","W16","W17","W18")
levels(data_plot_long$condition) <- c("Gefahr 2. Welle")
levels(data_plot_long$measurement) <- c("sehr gross", "gross", "mittelmaessig", "klein", "sehr klein")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_gefahr2w.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


#mean line 1= Trifft gar nicht zu 5= Trifft voll und ganz zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W12","W13","W14","W15","W16","W17","W18")
levels(data_plot_long_mean$condition) <- c("Gefahr 2. Welle")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 sehr klein - 5 sehr gross)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_gefahr2w.png", units="in", width=8, height=5, type="cairo-png")

```


### Zusammehalt

```{r zusammenhalt, echo=FALSE, fig.width=9, fig.height=5}  


# Zusammenhalt ###################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, zusammenhalt, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Zusammenhalt in der Gesellschaft erhöht")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_zusam.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1= Trifft gar nicht zu 5= Trifft voll und ganz zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Zusammenhalt in der Gesellschaft erhöht")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Trifft gar nicht zu - 5 Trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_zusam.png", units="in", width=8, height=5, type="cairo-png")

```

### Chancen der Krise

```{r chancen, echo=FALSE, fig.width=9, fig.height=5}  


# Chancen ###################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(umweundklima,onlinekommun), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Gut f. Umwelt und Klima","Umstellung auf Online Kommunikation")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_zusam.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1= Trifft gar nicht zu 5= Trifft voll und ganz zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Gut f. Umwelt und Klima","Umstellung auf Online Kommunikation")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Trifft gar nicht zu - 5 Trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_zusam.png", units="in", width=8, height=5, type="cairo-png")

```

### Demokratie

```{r demokratie, echo=FALSE, fig.width=9, fig.height=5}  


# Demokratie ###################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, demokratie, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Zufriedenheit mit Demokratie")
levels(data_plot_long$measurement) <- c("Sehr zufrieden", "Eher zufrieden", "Teils-teils", "Eher unzufrieden", "Sehr unzufrieden")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_demo.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1= sehr unzufireden 5= sehr zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Zufriedenheit mit Demokratie")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")


# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 sehr unzufrieden - 5 sehr zufrieden)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_demo.png", units="in", width=8, height=5, type="cairo-png")


```

```{r demokratie2, echo=FALSE,include=FALSE,eval=FALSE, fig.width=9, fig.height=5}  


# Demokratie ###################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, demokratie, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Demokratiezufriedenheit")
levels(data_plot_long$measurement) <- c("Sehr zufrieden", "Eher zufrieden", "Teils-teils", "Eher unzufrieden", "Sehr unzufrieden")

levels(data_plot_long$wave) <-c("28.03.20", "04.04.20", "11.04.20","17.04.20","25.04.20","03.05.20","09.05.20","16.05.20","24.05.20","29.05.20","13.06.20","27.06.20","11.07.20","15.08.20","12.09.20","17.10.20","14.11.20","13.12.20","16.01.21","13.02.21","13.03.21","16.04.21","22.05.21","26.06.21","25.09.21","23.10.21","26.11.21","14.01.22","18.02.22","18.03.22","22.04.22","21.05.22","21.10.22")

every_nth = function(n) {
  return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}


# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) + 
    scale_x_discrete(breaks = every_nth(n = 1))
ggsave("figure1_stack_demo.png", units="in", width=8, height=5, type="cairo-png")


levels(data_plot_long$wave) <-c("28.03.2020", "04.04.2020", "11.04.2020","17.04.2020","25.04.2020","03.05.2020","09.05.2020","16.05.2020","24.05.2020","29.05.2020","13.06.2020","27.06.2020","11.07.2020","15.08.2020","12.09.2020","17.10.2020","14.11.2020","13.12.2020","16.01.2021","13.02.2021","13.03.2021","16.04.2021","22.05.2021","26.06.2021","25.09.2021","23.10.2021","26.11.2021","14.01.2022","18.02.2022","18.03.2022","22.04.2022","21.05.2022","21.10.2022")
data_plot_long$wave = as.Date(data_plot_long$wave, "%d.%m.%Y")

offset<-c(-17,-17,-17,-17,-17,17,17,17,17,17,17,17,17,17,17)



Sys.setlocale("LC_ALL", "German")


ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_area(position="stack", show.legend = TRUE,stat = "identity") +
    geom_text(aes(x=wave+offset,label=ifelse(wave==as.Date("28.03.2020", "%d.%m.%Y")|wave==as.Date("21.10.2022", "%d.%m.%Y"),paste0(round(prop*100, digits = 0),"%"),"")), position=position_stack(vjust=0.5), color="black", size=3) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Anteil der Befragten in Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits=c(0,1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "3 month", date_labels = "%b %Y")
ggsave("figure1_stack_demo_V2.png", units="in", width=8, height=5, type="cairo-png")

```


### Vertrauen

```{r vertrauen, echo=FALSE, fig.width=9, fig.height=6}  

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

lr_gen_w1 <- lr_gen_w1 %>% filter(!is.na(ver_gov)&!is.na(ver_ges)&!is.na(ver_par)&!is.na(ver_pol)&!is.na(ver_orf)&!is.na(ver_mil)) 

data_long <- gather(lr_gen_w1, condition, measurement, c(ver_gov,ver_ges,ver_par,ver_pol,ver_orf,ver_mil), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "0 = Ueberhaupt kein Vertrauen","1","2","3","4","5","6","7","8","9","10 = Sehr viel Vertrauen")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1","W2","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
#levels(data_plot_long$wave) <-c("28.03.","04.04.","17.04.","25.04.",
#                                "03.05.","09.05.","16.05.","24.05.","29.05.",
#                                "13.06.","27.06.","11.07.","15.08.","12.09.",
#                                "17.10.","14.11.","13.12.","16.01.","13.02.",
#                                "13.03.","16.04.","22.05.")
levels(data_plot_long$condition) <- c("Regierung","Gesundheitssystem","Parlament","Polizei","ORF","Heer")


levels(data_plot_long$measurement) <- c("0 = Überhaupt\nkein Vertrauen","1","2","3","4","5","6","7","8","9","10 = Sehr\nviel Vertrauen","WN/KA")

RdYlBuGr = c(brewer.pal(n=11,"RdYlBu"),"#cccccc")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    facet_wrap(~condition,ncol=2 ) +
    scale_fill_manual(values=RdYlBuGr) +
    #scale_fill_brewer(palette = "RdYlBu", direction=1) +  #alternative:Blues
    labs(y = "Anteil der Befragten", x= "Befragungszeitpunkt (Median)",fill="") +
    #facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(0,1.12),breaks = seq(0, 1, by = .25)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=12,nrow=1,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_trust.png", units="in", width=9, height=6, type="cairo-png")

cat("  \n")

#mean line 1= sehr unzufireden 5= sehr zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave) <-c("W1","W2","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
#levels(data_plot_long_mean$wave) <-c("28.03.","04.04.","17.04.","25.04.",
#                                "03.05.","09.05.","16.05.","24.05.","29.05.",
#                                "13.06.","27.06.","11.07.","15.08.","12.09.",
#                                "17.10.","14.11.","13.12","16.01.","13.02.",
#                                "13.03.","16.04.","22.05.")
levels(data_plot_long_mean$condition) <- c("Regierung","Gesundheitssystem","Parlament","Polizei","ORF","Heer")


# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 überhaupt kein Vertrauen - 10 sehr viel Vertrauen)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_trust.png", units="in", width=8, height=5, type="cairo-png")


```

### Lebenszufriedenheit

```{r lebenszufr, echo=FALSE, fig.width=9, fig.height=5}  


#Lebenszufriedenheit ##########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, lebensz, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "0 = aeusserst unzufrieden","1", "2", "3", "4", "5", "6", "7", "8", "9","10 = aeusserst zufrieden")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Lebenszufriedenheit")


levels(data_plot_long$measurement) <- c("äußerst unzufrieden","1", "2", "3", "4", "5", "6", "7", "8", "9","äußerst zufrieden")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_lebensz.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 0= äußerst unzufrieden 10= äußerst zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3", "W4", "W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Lebenszufriedenheit")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 äußerst unzufrieden - 10 äußerst zufrieden)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_lebensz.png", units="in", width=8, height=5, type="cairo-png")

```

### Regierungsbilanz

```{r bilanz, echo=FALSE, fig.width=9, fig.height=5}  

# Bilanz der Regierung:###########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, blianz_reg, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Bilanz der Arbeit und Leistung der Regierung")

levels(data_plot_long$measurement) <- c("Sehr zufrieden", "Eher zufrieden", "Teils-teils", "Eher unzufrieden", "Sehr unzufrieden")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_bilanz.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 Sehr unzufrieden - 5 Sehr zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Bilanz der Arbeit und Leistung der Regierung")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Sehr unzufrieden - 5 Sehr zufrieden)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bilanz.png", units="in", width=8, height=5, type="cairo-png")

```

### Zufriedenheit mit d. Arbeit der Regierung 

```{r zufarbreg, echo=FALSE, fig.width=9, fig.height=5}  

# Zufriedenheit mit d. Arbeit der Regierung :###########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(zuf_reg_al,zuf_reg_un,zuf_reg_wi,zuf_reg_in), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W3","W5","W8","W10","W13","W16","W19","W22","W26","W32","W33")
levels(data_plot_long$condition) <- c("Bekämpfung der Arbeitslosigkeit","Stützung v. KMUs","Stützung der Wirtschaft","Bekämpfung der Inflation")

levels(data_plot_long$measurement) <- c("Sehr zufrieden", "Eher zufrieden", "Teils-teils", "Eher unzufrieden", "Sehr unzufrieden")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_zufarbreg.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 Sehr unzufrieden - 5 Sehr zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave) <-c("W3","W5","W8","W10","W13","W16","W19","W22","W26","W32","W33)
levels(data_plot_long_mean$condition) <- c("Bekämpfung der Arbeitslosigkeit","Stützung v. KMUs","Stützung der Wirtschaft","Bekämpfung der Inflation")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Sehr unzufrieden - 5 Sehr zufrieden)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_zufarbreg.png", units="in", width=8, height=5, type="cairo-png")

```

### Effektivität der Maßnahmen

```{r effektiv, echo=FALSE,  fig.width=9, fig.height=5}  

# Effektivität der Maßnahmen######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, mas_effektiv, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Effektivität der gesetzlichen Maßnahmen")

levels(data_plot_long$measurement) <- c("überhaupt nicht effektiv", "eher nicht effektiv", "teils effektiv", "eher effektiv", "sehr effektiv")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    #facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_effektiv.png", units="in", width=7.5, height=4.5)

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Effektivität der gesetzlichen Maßnahmen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 überhaupt nicht effektiv - 5 sehr effektiv)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_effektiv.png", units="in", width=8, height=5, type="cairo-png")

```

### Angemessenheit der Maßnahmen

```{r angemessen, echo=FALSE,  fig.width=9, fig.height=5}  

# Angemessenheit der Maßnahmen######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, mas_angemessen, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Angemesseneheit der gesetzlichen Maßnahmen")

levels(data_plot_long$measurement) <- c("überhaupt nicht ausreichend", "eher nicht ausreichend", "angemessen", "eher zu stark", "zu extrem")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    #facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_angem.png", units="in", width=7.5, height=4.5)

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Angemesseneheit der gesetzlichen Maßnahmen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 überhaupt nicht ausreichend - 4 zu extrem)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_angem.png", units="in", width=8, height=5, type="cairo-png")

```

### "Corona Skeptizismus"

```{r skeptizismus, echo=FALSE,  fig.width=9, fig.height=5}  

#Corona-Skeptizismus
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(skept_steuer,skept_lebens,skept_wichti,skept_behaup,skept_andere,skept_fehler,skept_uebert,skept_grippe,skept_gerech,skept_lebumg), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Akzeptabel höhere\nSteuern zu zahlen","Bereit Lebensweise\nzu ändern","Gibt wichtigeres\nals Corona im Leben","Behauptungen über\nCorona übertrieben","Solange andere Verhalten\nnicht ändern keine\neigene Verhaltensänderung","Maßnahmen zur Eindämmung\ndes Coronavirus\nwaren Fehler","Regierung übertreibt\ngesundheitliche Gefahr","Covid19 gefährlicher\nals Grippe","Corona-Maßnahmen\nsind gerecht","Pers. Umfeld bereit\nLebensweise zu ändern")

levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=3,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_skeptiz.png", units="in", width=10, height=10)

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(4-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Akzeptabel höhere\nSteuern zu zahlen","Bereit Lebensweise\nzu ändern","Gibt wichtigeres\nals Corona im Leben","Behauptungen über\nCorona übertrieben","Solange andere Verhalten\nnicht ändern keine\neigene Verhaltensänderung","Maßnahmen zur Eindämmung\ndes Coronavirus\nwaren Fehler","Regierung übertreibt\ngesundheitliche Gefahr","Covid19 gefährlicher\nals Grippe","Corona-Maßnahmen\nsind gerecht","Pers. Umfeld bereit\nLebensweise zu ändern")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Trifft überhaupt nicht zu - 4 Trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_skeptiz.png", units="in", width=8, height=5, type="cairo-png")

```


```{r skeptizismus blog2, echo=FALSE,include=FALSE, eval=FALSE,  fig.width=9, fig.height=5}  

#Corona-Skeptizismus
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(skept_fehler,skept_uebert), factor_key=TRUE)#skept_lebens
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Maßnahmen zur Eindämmung\ndes Coronavirus\nwaren Fehler","Regierung übertreibt\ngesundheitliche Gefahr")

levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
   # scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_skeptiz_blog_2.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Akzeptabel höhere\nSteuern zu zahlen","Bereit Lebensweise\nzu ändern","Gibt wichtigeres\nals Corona im Leben","Behauptungen über\nCorona übertrieben","Solange andere Verhalten\nnicht ändern keine\neigene Verhaltensänderung","Maßnahmen zur Eindämmung\ndes Coronavirus\nwaren Fehler","Regierung übertreibt\ngesundheitliche Gefahr")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 überhaupt nicht ausreichend - 5 zu extrem)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_skeptiz_blog_2.png", units="in", width=8, height=5, type="cairo-png")

```


```{r skeptizismus blog, echo=FALSE, include=FALSE, eval=FALSE, fig.width=9, fig.height=5}  

#Corona-Skeptizismus
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(skept_andere), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)

data_plot_long <- data_plot_long %>% filter(wave!="8")

levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Solange andere Verhalten nicht ändern keine eigene Verhaltensänderung notwendig")

levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) #+ 
    #scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_skeptiz_blog.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Akzeptabel höhere\nSteuern zu zahlen","Bereit Lebensweise\nzu ändern","Gibt wichtigeres\nals Corona im Leben","Behauptungen über\nCorona übertrieben","Solange andere Verhalten\nnicht ändern keine\neigene Verhaltensänderung")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 überhaupt nicht ausreichend - 5 zu extrem)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_skeptiz_blog.png", units="in", width=8, height=5, type="cairo-png")

```

### Maßnahmen Geltung

```{r geltung, echo=FALSE, fig.width=9, fig.height=10}  


#Maßnahmen sollen gelten
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(masgelten_kontakt,masgelten_gastaet,masgelten_veranst,masgelten_schwimm,masgelten_spielpl,masgelten_schulen,masgelten_kinderg,masgelten_senheim,masgelten_geschae,masgelten_reisefr,masgelten_betretu,masgelten_maskenp,masgelten_gastreg,masgelten_nachtau,masgelten_zutesdi,masgelten_zutvegg,masgelten_zutgagg,masgelten_dreigar), factor_key=TRUE) #masgelten_zutesve,masgelten_zutesga,

data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)

#levels(data_plot_long$wave) <-c("25.04.","03.05.","09.05.","16.05.","24.05.","29.05.","13.06.","27.06.","11.07.","15.08.","12.09.","17.10.")

levels(data_plot_long$wave) <-c("W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")

levels(data_plot_long$condition) <- c("Einschränkung v.\nKontakten",
                                      "Schließung v.\nGaststätten etc.",
                                      "Verbot v.\nVeranstaltungen",
                                      "Schließung v.\nSchwimmbädern",
                                      "Schließung v.\nSpielplätzen",
                                      "Schließung v.\nSchulen",
                                      "Schließung v.\nKindergärten",
                                      "Besuchsverbot in\nSeniorenwohnheimen",
                                      "Schließung v.\nGeschäften",
                                      "Einschränkung d.\nReisefreiheit",
                                      "Betretungsverbot\nd. öff. Raums",
                                      "Maskenpflicht in Geschäfte\n & öff. Verkehr",
                                      "Registrierungspflicht\nin Gasthäuser",
                                      "Nächtliche\nAusgangsbeschränkungen",
                                      "Zutrittstests\nDienstleistungen",
                                      "Zutritt Veranstaltungen\nnur für Genesene\nund Geimpfte",
                                      "Zutritt Gastronomie\nnur für Genesene\nund Geimpfte",
                                      "Verpflichtende\n3-G-Regel am\nArbeitsplatz") #"Zutrittstests\nVeranstaltungen","Zutrittstests\nGastro/Hotellerie",

levels(data_plot_long$measurement) <- c("Sollte derzeit auf jeden Fall gelten", "Sollte derzeit eher gelten", "Sollte derzeit eher nicht gelten", "Sollte derzeit auf keinen Fall gelten")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_geltung.png", units="in", width=10.5, height=9.5)

cat("  \n")


#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(4-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Einschränkung v.\nKontakten",
                                      "Schließung v.\nGaststätten etc.",
                                      "Verbot v.\nVeranstaltungen",
                                      "Schließung v.\nSchwimmbädern",
                                      "Schließung v.\nSpielplätzen",
                                      "Schließung v.\nSchulen",
                                      "Schließung v.\nKindergärten",
                                      "Besuchsverbot in\nSeniorenwohnheimen",
                                      "Schließung v.\nGeschäften",
                                      "Einschränkung d.\nReisefreiheit",
                                      "Betretungsverbot\nd. öff. Raums",
                                      "Maskenpflicht in Geschäfte\n & öff. Verkehr",
                                      "Registrierungspflicht\nin Gasthäuser",
                                      "Nächtliche\nAusgangsbeschränkungen", #"Zutrittstests\nVeranstaltungen", "Zutrittstests\nGastro/Hotellerie",
                                      "Zutrittstests\nDienstleistungen",
                                      "Zutritt Veranstaltungen\nnur für Genesene\nund Geimpfte",
                                      "Zutritt Gastronomie\nnur für Genesene\nund Geimpfte",
                                      "Verpflichtende\n3-G-Regel am\nArbeitsplatz")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Sollte nicht gelten - 4 Sollte gelten)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_geltung.png", units="in", width=9, height=5, type="cairo-png")

```

```{r geltung_APA_DiD, echo=FALSE, fig.width=9, fig.height=5, include=FALSE, eval=FALSE}  


#Maßnahmen sollen gelten Maskenpflicht
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(masgelten_maskenp), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

table(data_long$START_DATE[data_long$wave==15])

data_long<-data_long %>% filter(START_DATE == END_DATE) # from 1581 to 1499

data_long<-data_long %>% mutate(treated=ifelse(START_DATE<as.Date("2020-09-14"),"untreated","treated"))

table(data_long$treated[data_long$wave==15],data_long$START_DATE[data_long$wave==15])

data_long<-data_long %>% filter(wave == 15)

t.test(as.numeric(data_long$measurement)~data_long$treated)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,treated,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,treated) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W15")
#levels(data_plot_long$condition) <- c("Maskenpflicht in Geschäfte\n & öff. Verkehr")

levels(data_plot_long$measurement) <- c("Sollte derzeit auf jeden Fall gelten", "Sollte derzeit eher gelten", "Sollte derzeit eher nicht gelten", "Sollte derzeit auf keinen Fall gelten")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 1)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~treated,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=1,nrow=6,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_geltung.png", units="in", width=3.5, height=4)

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(4-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Maskenpflicht in\nGeschäften &\nöff. Verkehr")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Sollte nicht gelten - 4 Sollte gelten)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_geltung.png", units="in", width=8, height=5, type="cairo-png")



##########DID

#Maßnahmen sollen gelten Maskenpflicht
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

#lr_gen_w1 <- lr_gen_w1 %>% select(id,wave,START_DATE,END_DATE,masgelten_maskenp,WEIGHTD) %>% ungroup()
lr_gen_w1 <- lr_gen_w1 %>% filter(wave==14|wave==15)
lr_gen_w1 <- lr_gen_w1 %>% mutate(masgelten_maskenp_rec=(5-as.numeric(masgelten_maskenp)-1))

lr_gen_w1 <- panel_data(lr_gen_w1, id = id, wave = wave)

lr_gen_w1_wide <- widen_panel(lr_gen_w1, separator = "_")


lr_gen_w1_wide <- lr_gen_w1_wide %>% mutate(masgelten_maskenp_rec_d = masgelten_maskenp_rec_15 - masgelten_maskenp_rec_14)

lr_gen_w1_long <- long_panel(lr_gen_w1_wide, prefix = "_",periods = c(14,15) , label_location = "end")

data_long <- gather(lr_gen_w1_long, condition, measurement, c(masgelten_maskenp_rec_d), factor_key=TRUE)
#data_long$measurement<-as.factor(data_long$measurement)

table(data_long$START_DATE[data_long$wave==15])

data_long<-data_long %>% filter(START_DATE == END_DATE) # from 1581 to 1499

data_long<-data_long %>% mutate(treated=ifelse(START_DATE<as.Date("2020-09-14"),"untreated","treated"))

table(data_long$treated[data_long$wave==15],data_long$START_DATE[data_long$wave==15])

data_long<-data_long %>% filter(wave == 15)

t.test(data_long$measurement~data_long$treated)

```


### Vermutete Dauer der Krise

```{r dauer, echo=FALSE, fig.width=9, fig.height=5}  


#Vermutete Dauer bis normales Leben in AUT######################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, dauer, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "Weniger als 1 Monat","1-2 Monate", "3-4 Monate", "5-6 Monate", "Mehr als 6 Monate")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Dauer bis Leben in Öst. wieder normal ist")

#levels(data_plot_long$measurement) <- c("überhaupt nicht effektiv", "eher nicht effektiv", "teils effektiv", "eher effektiv", "sehr effektiv")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_dauer.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 weniger als 1 Monat - 5 mehr als 6 monate
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Dauer bis Leben in Öst. wieder normal ist")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 weniger als 1 Monat - 5 mehr als 6 Monate)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_dauer.png", units="in", width=8, height=5, type="cairo-png")

```

### Finanzielles Auskommen

```{r finanz auskommen, echo=FALSE, fig.width=9, fig.height=5}  


#aktuelle finanzielle Situation Ihres Haushalts######################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, fin_ausk_akt, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "sehr gut zurechtkommen","gut zurechtkommen", "teils-teils", "nur schwer zurechtkommen", "nur sehr schwer zurechtkommen")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Finanzielles Auskommen")

#levels(data_plot_long$measurement) <- c("überhaupt nicht effektiv", "eher nicht effektiv", "teils effektiv", "eher effektiv", "sehr effektiv")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_auskommen.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


#mean line 1 weniger als 1 Monat - 5 mehr als 6 monate
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(5-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Finanzielles Auskommen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zurechtkommen  \n (0=sehr schwer - 4=sehr gut)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_auskommen.png", units="in", width=8, height=5, type="cairo-png")

```


### Zukunftserwartungen Finanzsituation & Wirtschaftssituation 

```{r Zukunftserwartungen fi und wi, echo=FALSE, fig.width=9, fig.height=5}  

#arbl_yea,pric_yea

#aktuelle finanzielle Situation Ihres Haushalts######################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(fin_ausk_yea,eco_ausk_yea), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W3","W7","W11","W15","W18","W22","W26","W30","W33","W34")
levels(data_plot_long$condition) <- c("Finanzielles Auskommen in 12 Monaten","Wirtschaftslage in 12 Monaten")

#levels(data_plot_long$measurement) <- c("überhaupt nicht effektiv", "eher nicht effektiv", "teils effektiv", "eher effektiv", "sehr effektiv")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_zuk_finanz_wirt.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


#mean line 1 weniger als 1 Monat - 5 mehr als 6 monate
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(5-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Finanzielles Auskommen in 12 Monaten","Wirtschaftslage in 12 Monaten")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Erwartung  \n (0=viel schlechter - 4=viel besser)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_zuk_finanz_wirt.png", units="in", width=8, height=5, type="cairo-png")

```

### Zukunftserwartungen Arbeitslosigkeit & Preise 

```{r Zukunftserwartungen al und p, echo=FALSE, fig.width=9, fig.height=5}  
#aktuelle finanzielle Situation Ihres Haushalts######################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(arbl_yea,pric_yea), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W27","W30","W33")
levels(data_plot_long$condition) <- c("Arbeitslosenzahlen in 12 Monaten","Preise in 12 Monaten")

#levels(data_plot_long$measurement) <- c("überhaupt nicht effektiv", "eher nicht effektiv", "teils effektiv", "eher effektiv", "sehr effektiv")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_zuk_arbeil_preis.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


#mean line 1 weniger als 1 Monat - 5 mehr als 6 monate
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(5-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Finanzielles Auskommen in 12 Monaten","Wirtschaftslage in 12 Monaten")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Erwartung  \n (0=werden sehr stark sinken - 4=werden sehr stark steigen)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_zuk_arbeil_preis.png", units="in", width=8, height=5, type="cairo-png")

```

```{r finanz auskommen children, echo=FALSE,eval=FALSE,include=FALSE, fig.width=9,fig.height=5}  

### Finanzielles Auskommen für Personen mit Kindern
#aktuelle finanzielle Situation Ihres Haushalts######################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) %>% filter((SD_HH_TEENS>0|SD_HH_CHILD14>0)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, fin_ausk_akt, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "sehr gut zurechtkommen","gut zurechtkommen", "teils-teils", "nur schwer zurechtkommen", "nur sehr schwer zurechtkommen")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Finanzielles Auskommen")

#levels(data_plot_long$measurement) <- c("überhaupt nicht effektiv", "eher nicht effektiv", "teils effektiv", "eher effektiv", "sehr effektiv")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_auskommen_child.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 weniger als 1 Monat - 5 mehr als 6 monate
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(5-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Finanzielles Auskommen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zurechtkommen  \n (0=sehr schwer - 4=sehr gut)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_auskommen_child.png", units="in", width=8, height=5, type="cairo-png")

```


```{r finanz auskommen single parent,eval=FALSE,include=FALSE,echo=FALSE, fig.width=9, fig.height=5}  
### Finanzielles Auskommen für alleinerziehende Personen mit Kindern

#aktuelle finanzielle Situation Ihres Haushalts######################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) %>% filter((SD_HH_TEENS>0|SD_HH_CHILD14>0) & SD_HH_PARTNER=="Nicht genannt") # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, fin_ausk_akt, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "sehr gut zurechtkommen","gut zurechtkommen", "teils-teils", "nur schwer zurechtkommen", "nur sehr schwer zurechtkommen")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Finanzielles Auskommen")

#levels(data_plot_long$measurement) <- c("überhaupt nicht effektiv", "eher nicht effektiv", "teils effektiv", "eher effektiv", "sehr effektiv")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_auskommen_child_single.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 weniger als 1 Monat - 5 mehr als 6 monate
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(5-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Finanzielles Auskommen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zurechtkommen  \n (0=sehr schwer - 4=sehr gut)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_auskommen_child_single.png", units="in", width=8, height=5, type="cairo-png")

```

### Maßnahmen der Regierung

```{r masnahmen, echo=FALSE, fig.width=9, fig.height=5}  

#Maßnahmen der Regierung Wünsche Richtungen#####################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(mas_gmehrheit,mas_wissenschaft,mas_compliance,mas_geswirt,mas_vorbereitk,mas_arbnarbeitg), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2","W4","W6","W8","W10","W12","W17","W20","W23","W30")
levels(data_plot_long$condition) <- c("An Maßnahmen festhalten\nauch wenn Mehrheit\nder Bev. dagegegen", "Pol. Entscheidungen auf\nGrundlage wissenschaftl.\nErkenntnisse besser","Pol. Entscheidungen\nmuss manauf jeden Fall\nFolge leisten","Gesundheit der Menschen\nimmer über wirtschaftliche\nInteressen zu stellen","Sollte auf\nalles vorbereitet sein","Sollte jetzt in erster Linie\n Unternehmen stärken,\nanstatt Arbeitnehmer*Innen")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu",direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 7)) + 
    guides(fill=guide_legend(ncol=3,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_masnahme.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2","W4","W6","W8","W10","W12","W17","W20","W23","W30")
levels(data_plot_long_mean$condition) <- c("An Maßnahmen festhalten\nauch wenn Mehrheit\nder Bev. dagegegen", "Pol. Entscheidungen auf\nGrundlage wissenschaftl.\nErkenntnisse besser","Pol. Entscheidungen\nmuss manauf jeden Fall\nFolge leisten","Gesundheit der Menschen\nimmer über wirtschaftliche\nInteressen zu stellen","Sollte auf\nalles vorbereitet sein","Sollte jetzt in erster Linie\n Unternehmen stärken,\nanstatt Arbeitnehmer*Innen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")


# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 trifft gar nicht zu - 5 trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=3,nrow=2,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_masnahme.png", units="in", width=8, height=5, type="cairo-png")


```

### Maßnahmen der Regierung nach Bildung und Partei

```{r compliance nach, echo=FALSE, fig.width=9, fig.height=5, include=TRUE}  

#Compliance nach ..#####################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 


lr_gen_w1 <- lr_gen_w1 %>% mutate( 
  edu4= ifelse(SD_EDU == "Volksschule oder weniger" | SD_EDU == "Hauptschule oder AHS Unterstufe" | SD_EDU == "Polytechnikum, BMS (Fachschule, z.B. HASCH)", "primary",
         ifelse(SD_EDU == "Lehre, Berufsschule", "Lehre", 
         ifelse(SD_EDU == "AHS mit Matura" | SD_EDU == "BHS mit Matura (z.B. HTL, HAK, HBLA etc.)" | SD_EDU == "Hochschulverwandte Lehranstalt oder Kolleg", "secondary",
        ifelse(SD_EDU == "Bachelor" | SD_EDU == "Magister / Master / Diplomingenieur / Fachhochschule" | SD_EDU == "Doktor / PhD", "tertiary",NA)))))

lr_gen_w1$edu4 <- as.factor(lr_gen_w1$edu4)

lr_gen_w1$edu4 <- fct_relevel(lr_gen_w1$edu4, "primary","Lehre","secondary","tertiary" )


data_long <- lr_gen_w1 %>% mutate_at(c("ges_per_gefahr", "ges_pub_gefahr", "wir_per_gefahr", "wir_pub_gefahr","mas_compliance", "blianz_reg"),as.numeric) %>% gather(condition, measurement, c(ges_per_gefahr, ges_pub_gefahr, wir_per_gefahr, wir_pub_gefahr, mas_compliance, blianz_reg))


data_long$condition<-as.factor(data_long$condition)

#ALL

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W1", "W2","W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Bilanz der Regierung", "Persönliche gesunheitliche Gefahr", "Kollektive gesunheitliche Gefahr","Folge leisten", "Persönliche wirtschaftliche Gefahr", "Kollektive wirtschaftliche Gefahr")

#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")


# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement)) +
  geom_line(aes(group = condition),size=1) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1) +
  facet_wrap(~condition) +
    scale_fill_manual(values= coloursample) +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 niedrig - 5 hoch)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=3,nrow=2,byrow=TRUE)) +
     scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("gefahr_Bilanz_und_compliance_gesamt.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#BY EDU 4

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement) & !is.na(edu4)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, edu4) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition,edu4) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W1", "W2","W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Bilanz der Regierung", "Persönliche gesunheitliche Gefahr", "Kollektive gesunheitliche Gefahr","Folge leisten", "Persönliche wirtschaftliche Gefahr", "Kollektive wirtschaftliche Gefahr")

#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")


# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = edu4)) +
  geom_line(aes(group = edu4),size=1) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1) +
  facet_wrap(~condition) +
    scale_fill_manual(values= coloursample) +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 niedrig - 5 hoch)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=4,nrow=2,byrow=TRUE))  +
     scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("gefahr_Bilanz_und_compliance_education.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


#BY PARTY

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement) & !is.na(SD_NRVOTE2019) & SD_NRVOTE2019!="War nicht wahlberechtigt" & SD_NRVOTE2019!="Habe ungültig gewählt" & SD_NRVOTE2019!="Andere Partei" & SD_NRVOTE2019!="KPÖ" & SD_NRVOTE2019!="Liste JETZT") %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, SD_NRVOTE2019) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition,SD_NRVOTE2019) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W1", "W2","W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Bilanz der Regierung", "Persönliche gesunheitliche Gefahr", "Kollektive gesunheitliche Gefahr","Folge leisten", "Persönliche wirtschaftliche Gefahr", "Kollektive wirtschaftliche Gefahr")

#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")


# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = SD_NRVOTE2019)) +
  geom_line(aes(group = SD_NRVOTE2019),size=1) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1) +
  facet_wrap(~condition) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 niedrig - 5 hoch)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=4,nrow=2,byrow=TRUE))  +
     scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("gefahr_Bilanz_und_compliance_NRwahl.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


```

### Gesellschaftliche solidarität

```{r solidaritat, echo=FALSE, fig.width=9, fig.height=5}  


# gesellschaftliche Solidarität###############################################################
                                        
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, zus_bestes:zus_schutzen, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c( "W3","W6", "W9",  "W13", "W14", "W16", "W17", "W18","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Geben alle unser Bestes,\num Krisensituation zu überwinden", "Meisten sind sich einig,\ndass Zusammenhalt wichtig ist","Wir rücken zusammen\num die Schwachen zu schützen")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction = -1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 7)) + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_stack_solidar.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave) <-c( "W3","W6", "W9",  "W13", "W14", "W16", "W17", "W18","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Geben alle unser Bestes,\num Krisensituation zu überwinden", "Meisten sind sich einig,\ndass Zusammenhalt wichtig ist","Wir rücken zusammen\num die Schwachen zu schützen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 trifft gar nicht zu - 5 trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=3,nrow=2,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_solidar.png", units="in", width=8, height=5, type="cairo-png")

```

### Konflikte in Österreich

```{r konflikte, echo=FALSE,  fig.width=9, fig.height=5}  

#Konflikte in Österreich
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(konf_ar,konf_am,konf_aa,konf_ja,konf_om,konf_gu), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "gar keine Konflikte","eher schwache Konflikte","starke Konflikte","sehr starke Konflikte" )


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W4","W25")
levels(data_plot_long$condition) <- c("Armen und Reichen","Arbeitern und Mittelstand","Arbeitgebern und Arbeitnehmern","Jungen und Alten","Geb. Österreichern und Menschen mit Migrationshintergrund","Geimpften und Ungeimpften")


#levels(data_plot_long$measurement) <- c("Sehr dafür", "Eher dafür", "Teils-teils", "Eher dagegen", "Sehr dagegen")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu",direction = -1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 3) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=3,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_konfl.png", units="in", width=10, height=7)

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean((as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W4","W25")
levels(data_plot_long_mean$condition) <- c("Armen und Reichen","Arbeitern und Mittelstand","Arbeitgebern und Arbeitnehmern","Jungen und Alten","Geb. Österreichern und Menschen mit Migrationshintergrund","Geimpften und Ungeimpften")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.1,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 gar keine Konflikte - 3 sehr starke Konflikte)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) #+
    #scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_konfl.png", units="in", width=8, height=5, type="cairo-png")




```

### Häusliche Konflikte und Gewalt

```{r hausliche gewalt, echo=FALSE, fig.width=9, fig.height=5}  

#häusliche Konflikte und Gewalt################################################################
#W2_meinungmich
#W2_meinungdisk
#W2_streiten
#W2_hand 

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(hand,meinungdisk,meinungmich,streiten), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "nie", "an manchen Tagen", "mehrmals die Woche", "beinahe jeden Tag", "taeglich")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W2","W6")
levels(data_plot_long$condition) <- c("rutschte einem auch\nmal die Hand aus", "diskutierten Sie die\nMeinungsverschiedenheit ruhig aus","behielten Sie Ihre Meinung\n für sich","stritten Sie\nund wurden laut")

#levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu", "Trifft gar nicht zu")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    scale_fill_brewer(palette = "RdYlBu", direction = -1) +  #alternative:Blues
    labs(y = "Prozent", x= "Umgang mit Meinungsverschiedenheiten (bei Paaren)",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 7)) + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_stack_paarkonflr.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= täglich 1= nie
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W2","W6")
levels(data_plot_long_mean$condition) <- c("rutschte einem auch mal die Hand aus", "diskutierten Sie die Meinungsverschiedenheit ruhig aus","behielten Sie Ihre Meinung für sich","stritten Sie und wurden laut")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 nie - 5 täglich)", x= "Umgang mit Meinungsverschiedenheiten (bei Paaren)",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=2,nrow=2,byrow=TRUE)) 
ggsave("figure1_mean_paarkonfl.png", units="in", width=8, height=5, type="cairo-png")

```

### Alkohol- und Tabakkonsum

```{r alktabak, echo=FALSE, fig.width=9, fig.height=5}  

#Alkohol & #Tabak#################################################################
#W2_alkohol
#W2_tabak 

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(alkohol,tabak), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W2", "W4","W6")
levels(data_plot_long$condition) <- c("Alkohol", "Tabak")

levels(data_plot_long$measurement) <- c("viel weniger", "etwas weniger", "etwa gleich viel", "etwas mehr", "viel mehr","rauche nicht trinke keinen Alk.")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    scale_fill_brewer(palette = "RdYlBu", direction = -1) +  #alternative:Blues
    labs(y = "Prozent", x= "Konsumveränderung legaler Drogen",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 7)) + 
    guides(fill=guide_legend(ncol=6,nrow=1,byrow=TRUE)) 
ggsave("figure1_stack_alktabak.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

```

### Regierungskompetenzen

```{r kompetenzen, echo=FALSE, fig.width=9, fig.height=5}  


#Regierungskompetenzen: ################################################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 



data_long <- gather(lr_gen_w1, condition, measurement, c(komp_video,komp_infos,komp_handy,komp_schliessen,komp_ausgansp,komp_bestrafen,komp_appaufenth,komp_schutzmasken), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2","W4","W12","W16","W17","W20","W23","W27")
levels(data_plot_long$condition) <- c("Menschen per Video\n überwachen", "Infos über\nPersonen zu sammeln\nohne deren Wissen","Personen per\nHandyortung\nverfolgen/aufspüren","Unternehmen behördlich\nschließen","Ausgangssperren\nzu verhängen","Nicht-Einhaltung der Maßnahmen bestrafen","Mit App Aufenthalt von\npos. getesteten sammlen\nund veröffentlichen","MNS tragen\nverpflichten")
levels(data_plot_long$measurement) <- c("Sollte definitiv das Recht haben", "Sollte vermutlich das Recht haben", "Sollte vermutlich nicht das Recht haben", "Sollte definitiv nicht das Recht haben")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 7)) + 
    guides(fill=guide_legend(ncol=3,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_kompetenzen.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= Sollte definitiv das Recht haben 1= Sollte definitiv nicht das Recht haben
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(5-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2","W4","W12","W16","W17","W20","W23","W27")
levels(data_plot_long_mean$condition) <- c("Menschen per Video\n überwachen", "Infos über\nPersonen zu sammeln\nohne deren Wissen","Personen per\nHandyortung\nverfolgen/aufspüren","Unternehmen behördlich\nschließen","Ausgangssperren\nzu verhängen","Nicht-Einhaltung der Maßnahmen bestrafen","Mit App Aufenthalt von\npos. getesteten sammlen\nund veröffentlichen","MNS tragen\nverpflichten")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Sollte definitiv nicht das Recht haben - 4 Sollte definitiv das Recht haben)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=4,nrow=2,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_kompetenzen.png", units="in", width=8, height=5, type="cairo-png")


```


## Soziale Normen

### Wahrgenommene Meinungen anderer Österreicher:

```{r soznorm meinung anderer, echo=FALSE, fig.width=9, fig.height=5}  


#Regierungskompetenzen: ################################################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c("sozialn_mein_and_abs","sozialn_mein_and_bes","sozialn_mein_and_ges","sozialn_mein_and_hau","sozialn_mein_and_sch","sozialn_mein_and_ver","sozialn_mein_and_imp","sozialn_mein_and_tes"), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W3","W7","W11","W14","W16","W18","W20","W22","W24","W25","W27","W29","W31","W33")
levels(data_plot_long$condition) <- c("Alle müssen\n1m Abstand halten","Nicht-Einhaltung\nvon Maßnahmen bestrafen","Geschäfte sollen\ngeschlossen bleiben", "Alle müssen\nzu Hause bleiben","Alle müssen\nSchutzmasken im\nöffentlichen Raum tragen","Verletzungen müssen\nvermieden werden","Alle müssen\nsich impfen lassen.","Alle müssen\nsich regelmäßig\ntesten.")
levels(data_plot_long$measurement) <- c("Nahezu alle sind dieser Meinung", "Die meisten sind dieser Meinung", "Etwa die Hälfte ist dieser Meinung", "Einige sind dieser Meinung","Nahezu niemand ist dieser Meinung")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 7)) + 
    guides(fill=guide_legend(ncol=3,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_soznorm_mein_andere.png", units="in", width=9, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= Sollte definitiv das Recht haben 1= Sollte definitiv nicht das Recht haben
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W3","W7","W11","W14","W16","W18","W20","W22","W29","W31","W33")
levels(data_plot_long_mean$condition) <- c("Alle müssen\n1m Abstand halten","Nicht-Einhaltung\nvon Maßnahmen bestrafen","Geschäfte sollen\ngeschlossen bleiben", "Alle müssen\nzu Hause bleiben","Alle müssen\nSchutzmasken im\nöffentlichen Raum tragen","Verletzungen müssen\nvermieden werden","Alle müssen\nsich impfen lassen.","Alle müssen\nsich regelmäßig\ntesten.")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Nahezu niemand ist dieser Meinung - 4 Nahezu alle sind dieser Meinung)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=4,nrow=2,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_soznorm_mein_andere.png", units="in", width=9, height=5, type="cairo-png")


```

### Wahrgenommenes Verhalten anderer Österreicher:

```{r soznorm verhalten anderer, echo=FALSE, fig.width=9, fig.height=5}  


#Verhalten anderer: ################################################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c("sozialn_verh_and_abs", "sozialn_verh_and_hau","sozialn_verh_and_sch","sozialn_verh_and_ver","sozialn_verh_and_imp","sozialn_verh_and_tes"), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W3","W7","W11","W14","W16","W18","W20","W22","W24","W25","W27","W29","W31","W33")
levels(data_plot_long$condition) <- c("Alle halten\n1m Abstand","Alle bleiben\nzu Hause","Alle tragen\nSchutzmasken im\nöffentlichen Raum","Verletzungen\nwerden vermieden","Sie haben sich\nimpfen lassen.","Sie testen sich\nregelmäßig")
levels(data_plot_long$measurement) <- c("Nahezu alle verhalten sich so", "Die meisten verhalten sich so", "Etwa die Hälfte verhält sich so", "Einige verhalten sich so","Nahezu niemand verhält sich so")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 10)) + 
    guides(fill=guide_legend(ncol=3,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_soznorm_verh_andere.png", units="in", width=7.2, height=4.2)

cat("  \n")

#mean line attention recoding 5= Sollte definitiv das Recht haben 1= Sollte definitiv nicht das Recht haben
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W3","W7","W11","W14","W16","W18","W20","W22","W29","W31")
levels(data_plot_long_mean$condition) <- c("Alle halten\n1m Abstand","Alle bleiben\nzu Hause","Alle tragen\nSchutzmasken im\nöffentlichen Raum","Verletzungen\nwerden vermieden","Sie haben sich\nimpfen lassen.","Sie testen sich\nregelmäßig")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Nahezu niemand verhält sich so - 4 Nahezu alle verhalten sich so)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=4,nrow=2,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_soznorm_verh_andere.png", units="in", width=8, height=5, type="cairo-png")


```

### Eigenes Verhalten

```{r soznorm verhalten eigen, echo=FALSE,warning=FALSE, fig.width=9, fig.height=5}  


#eigenes Verhalten: ################################################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c("sozialn_verh_eig_abs", "sozialn_verh_eig_hau","sozialn_verh_eig_sch","sozialn_verh_eig_ver"), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W3","W7","W11","W14","W16","W18","W20","W22","W24","W25","W27","W29","W31","W33")
levels(data_plot_long$condition) <- c("Ich halte\n1m Abstand","Ich bleibe\nzu Hause","Ich trage\nSchutzmasken im\nöffentlichen Raum","Ich vermeide\nVerletzungen")
levels(data_plot_long$measurement) <- c("Nahezu immer", "Meistens", "Manchmal", "Selten","Nahezu nie")


# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 10)) + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_soznorm_verh_eigene.png", units="in", width=7.2, height=4.2)



# data_long_scatter <- data_long %>% filter(wave==7) %>% mutate(alter=2020-SD_BIRTHYEAR)
# data_long_scatter$measurement<-5-as.numeric(data_long_scatter$measurement)
# levels(data_long_scatter$condition) <- c("Ich halte\n1m Abstand","Ich bleibe\nzu Hause","Ich trage\nSchutzmasken im\nöffentlichen Raum","Ich vermeide\nVerletzungen")
# 
# #NACH ALTER
# #scatter
# plotnachalter <- ggplot(data_long_scatter, aes(x=alter, y=measurement, color=condition, shape=condition)) + 
#     geom_jitter(alpha=.2) + 
#     geom_smooth(method=lm, aes(fill=condition)) +
#     #facet_grid(wave~condition) +
#     labs(y = 'Eigenes Verhalten', x= "Alter") +
#     scale_y_continuous(breaks = c(0, 1, 2,3,4),label = c("Nahezu nie","Selten","Manchmal","Meistens","Nahezu immer")) +
#     scale_x_continuous(breaks = c(20, 40, 60,80),label = c("20","40","60","80")) +
#     theme_minimal() +
#     scale_fill_manual(values= coloursample) +
#     scale_color_brewer(palette = "Set3") +
#     theme(legend.position="bottom",strip.text.x = element_text(size = 8), legend.title = element_blank()) + 
#     guides(color=guide_legend(color=guide_legend(""), fill = FALSE, shape = FALSE)) 
# #plotnachalter
# #ggsave("figure1_scatter_soznorm_verh_eigene_alter.png", units="in", width=6, height=5, type="cairo-png")
# 
# data_long_scatter$blianz_reg_rec<-5-as.numeric(data_long_scatter$blianz_reg)
# 
# #NACH REGIERUNGSZUFRIEDENHEIT
# #scatter
# plotnachzuf <- ggplot(data_long_scatter, aes(x=blianz_reg_rec, y=measurement, color=condition, shape=condition)) + 
#     geom_jitter(alpha=.2) + 
#     geom_smooth(method=lm, aes(fill=condition)) +
#     #facet_grid(wave~condition) +
#     labs(y = 'Eigenes Verhalten', x= "Zufriedenheit mit der Regierung") +
#     scale_y_continuous(breaks = c(0, 1, 2,3,4),label = c("Nahezu nie","Selten","Manchmal","Meistens","Nahezu immer")) +
#     scale_x_continuous(breaks = c(0, 1, 2,3,4),label = c("Sehr unzufrieden","Eher unzufrieden","Teils-teils","Eher zufrieden","Sehr zufrieden"),guide = guide_axis(n.dodge = 2)) +
#     theme_minimal() +
#     scale_fill_manual(values= coloursample) +
#     scale_color_brewer(palette = "Set3") +
#     theme(legend.position="bottom",strip.text.x = element_text(size = 8), panel.grid.minor = element_blank(), legend.title = element_blank()) + 
#     guides(color=guide_legend(color=guide_legend(""), fill = FALSE, shape = FALSE))
# #plotnachzuf
# #ggsave("figure1_scatter_soznorm_verh_eigene_bilanz.png", units="in", width=6, height=5, type="cairo-png")
# 
# figure2 <-ggarrange(
#   plotnachalter,plotnachzuf,labels = c("A","B"),
#   common.legend = TRUE, legend = "bottom",align ="hv",nrow=1
#   )
# annotate_figure(figure2, top = text_grob("", color = "black", face = "bold", size = 18))
#    
# ggsave("figure2_verhalten_alterzuf_final.png", units="in", width=10.0, height=5, type="cairo-png")
# 


####
#ZUSAMMEHANG EIGENES UND FREMDVERHALTEN

# 
# lr_gen_w1_scatter <- lr_gen_w1 %>% filter(wave22|wave==20|wave==18|wave==16|wave==14|wave==11|wave==7|wave==3) %>% mutate(alter=2020-SD_BIRTHYEAR)
# lr_gen_w1_scatter$sozialn_verh_eig_abs_rec<-5-as.numeric(lr_gen_w1_scatter$sozialn_verh_eig_abs)
# lr_gen_w1_scatter$sozialn_verh_and_abs_rec<-5-as.numeric(lr_gen_w1_scatter$sozialn_verh_and_abs)
# 
# lr_gen_w1_scatter$sozialn_verh_eig_hau_rec<-5-as.numeric(lr_gen_w1_scatter$sozialn_verh_eig_hau)
# lr_gen_w1_scatter$sozialn_verh_and_hau_rec<-5-as.numeric(lr_gen_w1_scatter$sozialn_verh_and_hau)
# 
# lr_gen_w1_scatter$sozialn_verh_eig_sch_rec<-5-as.numeric(lr_gen_w1_scatter$sozialn_verh_eig_sch)
# lr_gen_w1_scatter$sozialn_verh_and_sch_rec<-5-as.numeric(lr_gen_w1_scatter$sozialn_verh_and_sch)
# 
# lr_gen_w1_scatter$sozialn_verh_eig_ver_rec<-5-as.numeric(lr_gen_w1_scatter$sozialn_verh_eig_ver)
# lr_gen_w1_scatter$sozialn_verh_and_ver_rec<-5-as.numeric(lr_gen_w1_scatter$sozialn_verh_and_ver)
# 
# #levels(lr_gen_w1_scatter$condition) <- c("Ich halte\n1m Abstand","Ich bleibe\nzu Hause","Ich trage\nSchutzmasken im\nöffentlichen Raum","Ich vermeide\nVerletzungen")
# 
# lr_gen_w1_scatter$wave<-as.factor(lr_gen_w1_scatter$wave)
# levels(lr_gen_w1_scatter$wave) <-c("W3","W7","W11","W14","W16","W18","W20","W22")
# 
# #Abstand
# plot_abstand<-ggplot(lr_gen_w1_scatter, aes(x=sozialn_verh_and_abs_rec, y=sozialn_verh_eig_abs_rec, color=wave, shape=wave)) + 
#     geom_jitter(alpha=.2) + 
#     geom_smooth(method=lm, aes(fill=wave)) +
#     #facet_grid(wave~condition) +
#     labs(y = 'Eigenes Verhalten', x= 'Wahrg. Verhalten anderer', title="Abstand halten") +
#     scale_y_continuous(breaks = c(0, 1, 2,3,4),label = c("Nahezu nie","Selten","Manchmal","Meistens","Nahezu immer")) +
#     scale_x_continuous(breaks = c(0, 1, 2,3,4),label = c("Nahezu nie","Selten","Manchmal","Meistens","Nahezu immer"),guide = guide_axis(n.dodge = 2)) +
#     theme_minimal() +
#     scale_fill_manual(values= coloursample) +
#     scale_color_brewer(palette = "Set3") +
#     theme(legend.position="bottom",strip.text.x = element_text(size = 8), panel.grid.minor = element_blank(), legend.title = element_blank()) + 
#     guides(color=guide_legend(color=guide_legend(""), fill = FALSE, shape = FALSE))
# plot_abstand
# #ggsave("figure1_scatter_soznorm_verh_eigene_andere_abstand.png", units="in", width=8, height=5, type="cairo-png")
# 
# #HAUS
# plot_haus<-ggplot(lr_gen_w1_scatter, aes(x=sozialn_verh_and_hau_rec, y=sozialn_verh_eig_hau_rec, color=wave, shape=wave)) + 
#     geom_jitter(alpha=.2) + 
#     geom_smooth(method=lm, aes(fill=wave)) +
#     #facet_grid(wave~condition) +
#     labs(y = 'Eigenes Verhalten', x= 'Wahrg. Verhalten anderer', title="Zu Hause bleiben") +
#     scale_y_continuous(breaks = c(0, 1, 2,3,4),label = c("Nahezu nie","Selten","Manchmal","Meistens","Nahezu immer")) +
#     scale_x_continuous(breaks = c(0, 1, 2,3,4),label = c("Nahezu nie","Selten","Manchmal","Meistens","Nahezu immer"),guide = guide_axis(n.dodge = 2)) +
#     theme_minimal() +
#     scale_fill_manual(values= coloursample) +
#     scale_color_brewer(palette = "Set3") +
#     theme(legend.position="bottom",strip.text.x = element_text(size = 8), panel.grid.minor = element_blank(), legend.title = element_blank()) + 
#     guides(color=guide_legend(color=guide_legend(""), fill = FALSE, shape = FALSE))
# plot_haus
# #ggsave("figure1_scatter_soznorm_verh_eigene_andere_haus.png", units="in", width=8, height=5, type="cairo-png")
# 
# 
# #Schutzmaske
# plot_schutz<-ggplot(lr_gen_w1_scatter, aes(x=sozialn_verh_and_sch_rec, y=sozialn_verh_eig_sch_rec, color=wave, shape=wave)) + 
#     geom_jitter(alpha=.2) + 
#     geom_smooth(method=lm, aes(fill=wave)) +
#     #facet_grid(wave~condition) +
#     labs(y = 'Eigenes Verhalten', x= 'Wahrg. Verhalten anderer', title="Schutzmaske tragen") +
#     scale_y_continuous(breaks = c(0, 1, 2,3,4),label = c("Nahezu nie","Selten","Manchmal","Meistens","Nahezu immer")) +
#     scale_x_continuous(breaks = c(0, 1, 2,3,4),label = c("Nahezu nie","Selten","Manchmal","Meistens","Nahezu immer"),guide = guide_axis(n.dodge = 2)) +
#     theme_minimal() +
#     scale_fill_manual(values= coloursample) +
#     scale_color_brewer(palette = "Set3") +
#     theme(legend.position="bottom",strip.text.x = element_text(size = 8), panel.grid.minor = element_blank(), legend.title = element_blank()) + 
#     guides(color=guide_legend(color=guide_legend(""), fill = FALSE, shape = FALSE))
# plot_schutz
# #ggsave("figure1_scatter_soznorm_verh_eigene_andere_schutzmaske.png", units="in", width=8, height=5, type="cairo-png")
# 
# 
# #Verletzungen vermeiden
# plot_verletzung<-ggplot(lr_gen_w1_scatter, aes(x=sozialn_verh_and_ver_rec, y=sozialn_verh_eig_ver_rec, color=wave, shape=wave)) + 
#     geom_jitter(alpha=.2) + 
#     geom_smooth(method=lm, aes(fill=wave)) +
#     #facet_grid(wave~condition) +
#     labs(y = 'Eigenes Verhalten', x= 'Wahrg. Verhalten anderer', title="Verletzungen vermeiden") +
#     scale_y_continuous(breaks = c(0, 1, 2,3,4),label = c("Nahezu nie","Selten","Manchmal","Meistens","Nahezu immer")) +
#     scale_x_continuous(breaks = c(0, 1, 2,3,4),label = c("Nahezu nie","Selten","Manchmal","Meistens","Nahezu immer"),guide = guide_axis(n.dodge = 2)) +
#     theme_minimal() +
#     scale_fill_manual(values= coloursample) +
#     scale_color_brewer(palette = "Set3") +
#     theme(legend.position="bottom",strip.text.x = element_text(size = 8), panel.grid.minor = element_blank(), legend.title = element_blank()) + 
#     guides(color=guide_legend(color=guide_legend(""), fill = FALSE, shape = FALSE))
# plot_verletzung
# #ggsave("figure1_scatter_soznorm_verh_eigene_andere_verletzung.png", units="in", width=8, height=5, type="cairo-png")
# 
# 
# figure2 <-ggarrange(
#   plot_abstand,plot_haus,plot_schutz,plot_verletzung,
#   common.legend = TRUE, legend = "bottom",align ="hv",nrow=2, ncol=2
#   )
# annotate_figure(figure2, top = text_grob("Zusammenhang zwischen wahrgenommen Verhalten anderer und eigenem Verhalten", color = "black", face = "bold", size = 18))
#    
# ggsave("figure2_verhalten_final.png", units="in", width=10.5, height=8)





cat("  \n")


#mean line attention recoding 5= Sollte definitiv das Recht haben 1= Sollte definitiv nicht das Recht haben
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W3","W7","W11","W14","W16","W18","W20","W22")
levels(data_plot_long_mean$condition) <- c("Ich halte\n1m Abstand","Ich bleibe\nzu Hause","Ich trage\nSchutzmasken im\nöffentlichen Raum","Ich vermeide\nVerletzungen")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Nahezu nie - 4 Nahezu immer)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=4,nrow=2,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_soznorm_verh_eigene.png", units="in", width=8, height=5, type="cairo-png")


```


```{r soznorm meinung anderer einfach, echo=FALSE, fig.width=9, fig.height=5, include=FALSE, eval=FALSE}  


#Regierungskompetenzen: ################################################################################


lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c("sozialn_mein_and_sch"), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W3","W7","W11","W14","W16","W18","W20","W22","W24","W25","W27","W29","W31","W33")
levels(data_plot_long$condition) <- c("Alle müssen\nSchutzmasken im\nöffentlichen Raum tragen")
levels(data_plot_long$measurement) <- c("Nahezu alle\nsind dieser Meinung", "Die meisten\nsind dieser Meinung", "Etwa die Hälfte\nist dieser Meinung", "Einige\nsind dieser Meinung","Nahezu niemand\nist dieser Meinung")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 1)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="right",strip.text.x = element_text(size = 9)) + 
    guides(fill=guide_legend(ncol=1,nrow=5,byrow=TRUE)) 
ggsave("figure1_stack_soznorm_mein_andere.png", units="in", width=5, height=4)

cat("  \n")
```


```{r soznorm verhalten anderer einfach, echo=FALSE, fig.width=9, fig.height=5, include=FALSE, eval=FALSE}  

#: ################################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c("sozialn_verh_and_sch"), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W3","W7","W11","W14","W16","W18","W20","W22","W24","W25","W27","W29","W31","W33")
levels(data_plot_long$condition) <- c("Alle tragen\nSchutzmasken im\nöffentlichen Raum")
levels(data_plot_long$measurement) <- c("Nahezu alle\nverhalten sich so", "Die meisten\nverhalten sich so", "Etwa die Hälfte\nverhält sich so", "Einige\nverhalten sich so","Nahezu niemand\nverhält sich so")


# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 1)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="right",strip.text.x = element_text(size = 9)) + 
    guides(fill=guide_legend(ncol=1,nrow=5,byrow=TRUE)) 
ggsave("figure1_stack_soznorm_verh_andere.png", units="in", width=5, height=4)


```

```{r soznorm verhalten eigen einfach, echo=FALSE,warning=FALSE, fig.width=9, fig.height=5, include=FALSE, eval=FALSE}  

#eigenes Verhalten: ################################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c("sozialn_verh_eig_sch"), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W3","W7","W11","W14","W16","W18","W20","W22","W24","W25","W27","W29","W31","W33")
levels(data_plot_long$condition) <- c("Ich trage\nSchutzmasken im\nöffentlichen Raum")
levels(data_plot_long$measurement) <- c("Nahezu immer", "Meistens", "Manchmal", "Selten","Nahezu nie")


# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 1)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="right",strip.text.x = element_text(size = 9)) + 
    guides(fill=guide_legend(ncol=1,nrow=5,byrow=TRUE)) 
ggsave("figure1_stack_soznorm_verh_eigene.png", units="in", width=5, height=4)

```


## Stopp Corona-App

```{r stoppapp, echo=FALSE, fig.width=9, fig.height=5}  

#Stopp Corona app:##########################################################################################
#W4_app_nutzung 
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, app_nutzung_old, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W4")
levels(data_plot_long$condition) <- c("Stopp-Corona_App (Nutzung/Kenntnis)")
levels(data_plot_long$measurement) <- c("Ja, schon einmal genutzt" , "Nein, nie genutzt, aber davon gehört", "Habe kein Smartphone", "Nie davon gehört")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 7)) + 
    guides(fill=guide_legend(ncol=3,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_appnutzung_old.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#APP NUTZUNG NEU

#W4_app_nutzung 
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, app_nutzung_new, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W12","W16")
levels(data_plot_long$condition) <- c("Stopp-Corona_App (Nutzung/Kenntnis)")
levels(data_plot_long$measurement) <- c("Ja, frueher genutzt, derzeit nicht" ,"Ja, nutze sie derzeit", "Nein, nie genutzt, aber davon gehört", "Habe kein Smartphone", "Nie davon gehört")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 7)) + 
    guides(fill=guide_legend(ncol=3,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_appnutzung_new.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#Stopp Corona benutzung:##########################################################################################                                          
#W4_app_nutzlich 
#W4_app_freundlich 
#W4_app_schutz 
#W4_app_pflicht 



lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(app_nutzlich,app_freundlich,app_schutz,app_pflicht,app_komplex,app_verstae), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W4","W12","W16")
levels(data_plot_long$condition) <- c("App ist\nnützlich", "App ist\nbenutzerfreundlich","App schützt\ndie Daten","App sollte\nverpflichtend werden","App ist\nzu komplex","App ist\nunverständlich")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu","Trifft gar nicht zu")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 7)) + 
    guides(fill=guide_legend(ncol=3,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_appmeinung.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line attention recoding 5= Trifft voll und ganz zu 1= Trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W4","W12","W16")
levels(data_plot_long_mean$condition) <- c("App ist\nnützlich", "App ist\nbenutzerfreundlich","App schützt\ndie Daten","App sollte\nverpflichtend werden","App ist\nzu komplex","App ist\nunverständlich")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Trifft gar nicht zu - 5 Trifft voll und ganz zu )", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=4,nrow=2,byrow=TRUE)) 
ggsave("figure1_mean_appmeinung.png", units="in", width=8, height=5, type="cairo-png")
                                           


```

## Ungleichheit

```{r Besteuerung, echo=FALSE, fig.width=9, fig.height=5}  
#Besteuerung:##########################################################################################                                          
#tax_gleich
#tax_hurt
#tax_ineq
#tax_quarant

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(tax_ineq,tax_quarant), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W4","W10","W18","W24","W29","W34")
levels(data_plot_long$condition) <- c("Die Corona-Krise wird die\nKluft zwischen Arm und Reich\nin Österreich erhöhen", "Die Ausgangsbeschränkungen treffen\nPersonen mit niedrigem Einkommen\nhärter als Personen mit höherem Einkommen")
levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu","Trifft gar nicht zu")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_grid(~condition) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom",strip.text.x = element_text(size = 7)) + 
    guides(fill=guide_legend(ncol=3,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_steuerineq.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

# side graph
ggplot(data_plot_long, aes(fill=wave,x=measurement, y=prop)) + 
    geom_bar(position="dodge", show.legend = TRUE,stat = "identity", width=0.7) +
    scale_fill_manual(values= coloursample) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 3) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    theme(axis.text.x  = element_text(angle=90, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=1,byrow=TRUE)) 
ggsave("figure1_side_steuerineq.png", units="in", width=8, height=5, type="cairo-png")


#mean line attention recoding 5= Trifft voll und ganz zu 1= Trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W4","W10","W18","W24","W29","W34")
levels(data_plot_long_mean$condition) <- c("Die Corona-Krise wird die\nKluft zwischen Arm und Reich\nin Österreich erhöhen", "Die Ausgangsbeschränkungen treffen\nPersonen mit niedrigem Einkommen\nhärter als Personen mit höherem Einkommen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Trifft gar nicht zu - 5 Trifft voll und ganz zu )", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=4,nrow=2,byrow=TRUE)) 
ggsave("figure1_mean_steuerineq.png", units="in", width=8, height=5, type="cairo-png")
                                           

#Vertrauen in Instiutionen
#bern_data_ren3<-bern_data_ren3 %>% rename( 
```

### Haushaltsgeräte

```{r Haushaltsgeraete, echo=FALSE, fig.width=9, fig.height=5}

# Haushaltsgeräte kaufen guter Zeitpunkt######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, kaufen_haus, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Guter Zeitpunkt Haushaltsgeräte zu kaufen")

levels(data_plot_long$measurement) <- c("Sehr schlechter Zeitpunkt", "Eher schlechter Zeitpunkt", "Teils-teils", "Eher guter Zeitpunkt","Sehr guter Zeitpunkt")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE))+
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_haushaltsg.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Guter Zeitpunkt Haushaltsgeräte zu kaufen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Sehr schlechter Zeitpunkt - 5 Sehr guter Zeitpunkt)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_haushaltsg.png", units="in", width=8, height=5, type="cairo-png")
```

## EU Reformen

```{r eureformen, echo=FALSE, fig.width=9, fig.height=5}

# EU Reformen ######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(EU1_hohebeitr,EU1_grenzkontr,EU1_zentralst,EU1_ausfuhrst_eu,EU1_ausfuhrst_aut,EU2_autprof,EU2_personenfr,EU2_freihandel), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W2", "W7", "W12", "W14","W21","W30","W32")
levels(data_plot_long$condition) <- c("Höhere Beiträge\nin Ordnung", "Grenzkontrollen nötig", "Krisen stärker\nzentral steuern", "Ausfuhrstopp für\nnotwendige Güter(EU)", "Ausfuhrstopp für\nnotwendige Güter(AT)","Österreich profitiertdabei\nanderen zu helfen","Personenfreizügigkeit\nfördert  Wirtschaft","Freihandel wichtiger als\nSchutz heim. Wirtschaft")

levels(data_plot_long$measurement) <- c("Trifft voll und ganz zu", "Trifft eher zu", "Teils-teils", "Trifft eher nicht zu","Trifft gar nicht zu")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_eureformen.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(4-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W2", "W7", "W12", "W14","W21","W30","W32")
levels(data_plot_long_mean$condition) <- c("Höhere Beiträge\nin Ordnung", "Grenzkontrollen nötig", "Krisen stärker\nzentral steuern", "Ausfuhrstopp für\nnotwendige Güter(EU)", "Ausfuhrstopp für\nnotwendige Güter(AT)","Österreich profitiertdabei\nanderen zu helfen","Personenfreizügigkeit\nfördert  Wirtschaft","Freihandel wichtiger als\nSchutz heim. Wirtschaft")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Trifft gar nicht zu - 4 Trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_eureformen.png", units="in", width=8, height=5, type="cairo-png")
```

## EU Krisenfinanzierung

```{r krisenfinanzierung, echo=FALSE, fig.width=9, fig.height=5}

# EU Krisenfinanzierung ######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(EU_fin_beitr,EU_fin_schuld,EU_fin_fond,EU_fin_hilfsg,EU_fin_sachsp), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W7", "W12", "W14")
levels(data_plot_long$condition) <- c("Höhere Beiträge\ndurch Mitgliedsstaaten", "Gemeinsame Aufnahme\nvon Schulden", "Gemeinsamer Fond\nzur Kreditvergabe", "freiw. Vergabe v. Hilfs-\ngeldern o. Rückzahlung", "freiwillige Sachspenden\nan Mitgliedsstaaten")

data_plot_long$condition <- fct_relevel(data_plot_long$condition, "Höhere Beiträge\ndurch Mitgliedsstaaten", "Gemeinsame Aufnahme\nvon Schulden","freiw. Vergabe v. Hilfs-\ngeldern o. Rückzahlung", "Gemeinsamer Fond\nzur Kreditvergabe", "freiwillige Sachspenden\nan Mitgliedsstaaten")


levels(data_plot_long$measurement) <- c("Sehr dafür", "Eher dafür", "Teils-teils", "Eher dagegen","Sehr dagegen")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_eufinanzierung.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(4-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W7", "W12", "W14")
levels(data_plot_long_mean$condition) <- c("Höhere Beiträge\ndurch Mitgliedsstaaten", "Gemeinsame Aufnahme\nvon Schulden", "Gemeinsamer Fond\nzur Kreditvergabe", "freiw. Vergabe v. Hilfs-\ngeldern o. Rückzahlung", "freiwillige Sachspenden\nan Mitgliedsstaaten")

data_plot_long_mean$condition <- fct_relevel(data_plot_long_mean$condition, "Höhere Beiträge\ndurch Mitgliedsstaaten", "Gemeinsame Aufnahme\nvon Schulden","freiw. Vergabe v. Hilfs-\ngeldern o. Rückzahlung", "Gemeinsamer Fond\nzur Kreditvergabe", "freiwillige Sachspenden\nan Mitgliedsstaaten")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Sehr dagegen - 4 Sehr dafür)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_eufinanzierung.png", units="in", width=8, height=5, type="cairo-png")
```

## Tradeoff Preis-Herkunft v. Produkten

```{r preisherkunft, echo=FALSE, fig.width=9, fig.height=5}

# Tradeoff Preis-Herkunft ######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(preisherk_lebens,preisherk_medik,preisherk_kleid), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W7","W15")
levels(data_plot_long$condition) <- c("Lebensmittel", "Medikamente/\nMedizinische Produkte", "Kleidung")

data_plot_long$measurement <- fct_relevel(data_plot_long$measurement, "0 = Produkte aus anderen Laendern zu niedrigeren Preisen","1","2","3","4","5","6","7","8","9","10 = Produkte aus Oesterreich zu hoeheren Preisen")

levels(data_plot_long$measurement) <- c("Ausländische Produkte zu niedrigeren Preisen","1","2","3","4","5","6","7","8","9","Österr. Produkte zu höheren Preisen")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_preisherkunft.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_long$measurement <- fct_relevel(data_long$measurement, "0 = Produkte aus anderen Laendern zu niedrigeren Preisen","1","2","3","4","5","6","7","8","9","10 = Produkte aus Oesterreich zu hoeheren Preisen")


data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean((as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W7","W15")
levels(data_plot_long_mean$condition) <- c("Lebensmittel", "Medikamente/\nMedizinische Produkte", "Kleidung")


cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Ausländische Produkte zu niedrigeren Preisen\n- 10 Österr. Produkte zu höheren Preisen)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_preisherkunft.png", units="in", width=8, height=5, type="cairo-png")


```

## Entscheidungskompetenz: Regional-National-EU

```{r entscheidungskompetenz, echo=FALSE, fig.width=9, fig.height=5}

# Entscheidungskompetenz: Regional-National-EU ######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(eintscheidk_ges,eintscheidk_han,eintscheidk_asy,eintscheidk_ste,eintscheidk_arb,eintscheidk_umw,eintscheidk_agr), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W7","W14","W30")
levels(data_plot_long$condition) <- c("Gesundheit", "Handel", "Asyl", "Steuern", "Arbeitsmarkt","Umwelt","Agrar")

data_plot_long$condition <- fct_relevel(data_plot_long$condition, "Umwelt","Handel","Asyl","Agrar","Steuern","Gesundheit","Arbeitsmarkt")

levels(data_plot_long$measurement) <- c("Haupsächlich auf EU Ebene", "Haupsächlich auf nationaler Ebene", "Haupsächlich auf regionaler Ebene")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "Set3", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 7) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_entscheidungskomp.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(2-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W7","W14","W30")
levels(data_plot_long_mean$condition) <- c("Gesundheit", "Handel", "Asyl", "Steuern", "Arbeitsmarkt","Umwelt","Agrar")

data_plot_long_mean$condition <- fct_relevel(data_plot_long_mean$condition, "Umwelt","Handel","Asyl","Agrar","Steuern","Gesundheit","Arbeitsmarkt")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Haupsächlich auf regionaler Ebene - 2 Haupsächlich auf EU Ebene)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_entscheidungskomp.png", units="in", width=8, height=5, type="cairo-png")
```  

## EU-Reformen2

```{r eureformen2, echo=FALSE, fig.width=9, fig.height=5}

# EU Reformen ######################################################################
 

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

levels(lr_gen_w1$EU_reform_army)<-levels(lr_gen_w1$EU_reform_mloh)

data_long <- gather(lr_gen_w1, condition, measurement, c(EU_reform_fina,EU_reform_vert,EU_reform_mste,EU_reform_mloh,EU_reform_army), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W12", "W14", "W30")
levels(data_plot_long$condition) <- c("Erhebung von Steuern\ndurch die EU zur\nFinanzierung des EU-Budgets", "EU-weiter\nVerteilungsschlüssel\nfür Flüchtlinge", "Mindeststeuern für\nUnternehmensgewinne\nin der EU", "Einheitlicher\neuropäischer\nMindestlohn", "Einrichtung\neiner\nEU-Armee")

levels(data_plot_long$measurement) <- c("Sehr dafür", "Eher dafür", "Teils-teils", "Eher dagegen","Sehr dagegen")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction =-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) 
ggsave("figure1_stack_eureformen2.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(4-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W12", "W14", "W30")
levels(data_plot_long_mean$condition) <- c("Erhebung von Steuern\ndurch die EU zur\nFinanzierung des EU-Budgets", "EU-weiter\nVerteilungsschlüssel\nfür Flüchtlinge", "Mindeststeuern für\nUnternehmensgewinne\nin der EU", "Einheitlicher\neuropäischer\nMindestlohn", "Einrichtung\neiner\nEU-Armee")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Sehr dagegen - 4 Sehr dafür)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_eureformen2.png", units="in", width=8, height=5, type="cairo-png")
```

### Urlaub

```{r Urlaubsplanung, echo=FALSE, fig.width=9, fig.height=5}

# Urlaubsplanung guter Zeitpunkt######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, urlaub_planen, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W6","W14","W23")
levels(data_plot_long$condition) <- c("Guter Zeitpunkt Urlaub zu planen")

levels(data_plot_long$measurement) <- c("Sehr schlechter Zeitpunkt", "Eher schlechter Zeitpunkt", "Teils-teils", "Eher guter Zeitpunkt","Sehr guter Zeitpunkt")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_urlaubspl.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W6","W14","W23")
levels(data_plot_long_mean$condition) <- c("Guter Zeitpunkt Urlaub zu planen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Sehr schlechter Zeitpunkt - 5 Sehr guter Zeitpunkt)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_urlaubspl.png", units="in", width=8, height=5, type="cairo-png")
```

```{r Urlaubszeitpunkt, echo=FALSE, fig.width=9, fig.height=5}

# Urlaubszeitpunkt ######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, urlaub_beginn, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W6")
levels(data_plot_long$condition) <- c("Nächster Urlaubsbeginn")

levels(data_plot_long$measurement) <- c("August 2020", "Dezember 2020", "Im Jahr 2021", "Im Jahr 2022 oder später","Juli 2020","Juni 2020","Keine Angabe","Mai 2020","November 2020","Oktober 2020","September 2020")

data_plot_long$measurement <- fct_relevel(data_plot_long$measurement, "Mai 2020","Juni 2020","Juli 2020","August 2020","September 2020","Oktober 2020","November 2020","Dezember 2020","Im Jahr 2021","Im Jahr 2022 oder später","Keine Angabe")

#faceted by wave
ggplot(data_plot_long, aes(x=measurement, y=prop)) + 
    geom_bar(aes(fill = wave), show.legend = FALSE,stat = "identity") +
    geom_text(aes(label=round(prop*100, digits = 1)), vjust=-.3, color="black", size=2) +
    facet_grid(wave~condition) +
    labs(y = "Prozent", x= "Einschätzung",fill="Welle") +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    scale_fill_manual(values= coloursample) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
  #theme(axis.text.x  = element_text(angle=45, hjust = 1))
ggsave("figure1_facet_urlaubsbeginn.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")


# side graph
ggplot(data_plot_long, aes(fill=wave,x=measurement, y=prop)) + 
    geom_bar(position="dodge", show.legend = TRUE,stat = "identity", width=0.7) +
    scale_fill_manual(values= coloursample) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_side_urlaubsbeginn.png", units="in", width=8, height=5, type="cairo-png")

```

```{r Urlaubsart, echo=FALSE, fig.width=9,eval=FALSE,include=FALSE, fig.height=5}

# Urlaubsart######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, urlaub_art_andere:urlaub_art_wn, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


#table(data_long$measurement, data_long$condition)

data_long <- data_long %>% mutate(measurement2=ifelse(is.na(measurement) & wave==6,0,measurement))
data_long <- data_long %>% mutate(measurement2=ifelse(measurement2>=1,1,0))

#table(data_long$measurement, data_long$measurement2,useNA =  "always" )

#table(data_long$measurement2, data_long$condition)

#table(data_long$measurement, data_long$wave)

data_plot_long<-data_long %>% filter(!is.na(measurement2)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(prop=survey_mean(measurement2,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=prop+1.96*prop_se, ymin=prop-1.96*prop_se)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W6")
levels(data_plot_long$condition) <- c("Anderer Urlaub","Keine Angabe","Kreuzfahrt","Kultururlaub","Skiurlaub","Standurlaub","Verwandte besuchen","Wanderurlaub","Wellnesurlaub","Weltreise","Weiß nicht")

data_plot_long$condition <- fct_relevel(data_plot_long$condition, "Kultururlaub","Skiurlaub","Standurlaub","Verwandte besuchen","Wanderurlaub","Wellnesurlaub","Kreuzfahrt","Weltreise","Anderer Urlaub","Weiß nicht","Keine Angabe")



#levels(data_plot_long$measurement) <- c("")

#faceted by wave
ggplot(data_plot_long, aes(x=condition, y=prop)) + 
    geom_bar(aes(fill = wave), show.legend = FALSE,stat = "identity") +
    geom_text(aes(label=round(prop*100, digits = 1)), vjust=-.3, color="black", size=2) +
    facet_grid(~wave) +
    labs(y = "Prozent", x= "Urlaubsart",fill="Welle") +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    scale_fill_manual(values= coloursample) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
  #theme(axis.text.x  = element_text(angle=45, hjust = 1))
ggsave("figure1_facet_urlaubart.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

```


```{r Urlaubsziel, echo=FALSE, fig.width=9,eval=FALSE,include=FALSE, fig.height=5}

# Urlaubsziel######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, urlaub_ziel_at:urlaub_ziel_wn, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


#table(data_long$measurement, data_long$condition)

data_long <- data_long %>% mutate(measurement2=ifelse(is.na(measurement) & wave==6,0,measurement))
data_long <- data_long %>% mutate(measurement2=ifelse(measurement2>=1,1,0))

#table(data_long$measurement, data_long$measurement2,useNA =  "always" )

#table(data_long$measurement2, data_long$condition)

#table(data_long$measurement, data_long$wave)

data_plot_long<-data_long %>% filter(!is.na(measurement2)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(prop=survey_mean(measurement2,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=prop+1.96*prop_se, ymin=prop-1.96*prop_se)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W6")
levels(data_plot_long$condition) <- c("Österreich","Kroatien","Deutschland","Spanien","Anderes Europa","Außerhalb von Europa","Großbritannien","Griechenland","Italien","keine Angabe","Weiß nicht")

data_plot_long$condition <- fct_relevel(data_plot_long$condition, "Österreich","Deutschland","Italien","Kroatien","Spanien","Griechenland","Großbritannien","Anderes Europa","Außerhalb von Europa","Weiß nicht","keine Angabe")



#levels(data_plot_long$measurement) <- c("")

#faceted by wave
ggplot(data_plot_long, aes(x=condition, y=prop)) + 
    geom_bar(aes(fill = wave), show.legend = FALSE,stat = "identity") +
    geom_text(aes(label=round(prop*100, digits = 1)), vjust=-.3, color="black", size=2) +
    facet_grid(~wave) +
    labs(y = "Prozent", x= "Reiseziel",fill="Welle") +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    scale_fill_manual(values= coloursample) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
  #theme(axis.text.x  = element_text(angle=45, hjust = 1))
ggsave("figure1_facet_urlaubsziel.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

# side graph
ggplot(data_plot_long, aes(x=wave, y=prop)) + 
    geom_bar(position="dodge", show.legend = TRUE,stat = "identity", width=0.7) +
    scale_fill_manual(values= coloursample) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) 
ggsave("figure1_side_urlaubsziel.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

# mean line

data_plot_long_mean<-data_plot_long

ggplot(data_plot_long_mean, aes(wave, prop, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Urlaubsziel nein - 1 Urlaubsziel ja)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_urlaubsziel.png", units="in", width=8, height=5, type="cairo-png")



```


```{r Urlaubszielaut, echo=FALSE, eval=FALSE,include=FALSE,fig.width=9, fig.height=5}

# Urlaubszielaut######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, urlaub_zielaut_bg:urlaub_zielaut_wn, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


#table(data_long$measurement, data_long$condition)

data_long <- data_long %>% mutate(measurement2=ifelse(is.na(measurement) & wave==6,0,measurement))
data_long <- data_long %>% mutate(measurement2=ifelse(measurement2>=1,1,0))

#table(data_long$measurement, data_long$measurement2,useNA =  "always" )

#table(data_long$measurement2, data_long$condition)

#table(data_long$measurement, data_long$wave)

data_plot_long<-data_long %>% filter(!is.na(measurement2)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(prop=survey_mean(measurement2,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=prop+1.96*prop_se, ymin=prop-1.96*prop_se)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W6")
levels(data_plot_long$condition) <- c("Burgenland","keine Angabe","Kärnten","Niederösterreich","Oberösterreich","Salzburg","Steiermark","Triol","Vorarlberg","Wien","Weiß nicht")

data_plot_long$condition <- fct_relevel(data_plot_long$condition, "Vorarlberg","Triol","Salzburg","Steiermark","Kärnten","Oberösterreich","Niederösterreich","Wien","Burgenland","Weiß nicht","keine Angabe")



#levels(data_plot_long$measurement) <- c("")

#faceted by wave
ggplot(data_plot_long, aes(x=condition, y=prop)) + 
    geom_bar(aes(fill = wave), show.legend = FALSE,stat = "identity") +
    geom_text(aes(label=round(prop*100, digits = 1)), vjust=-.3, color="black", size=2) +
    facet_grid(~wave) +
    labs(y = "Prozent", x= "Reiseziel in Österreich",fill="Welle") +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    scale_fill_manual(values= coloursample) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
  #theme(axis.text.x  = element_text(angle=45, hjust = 1))
ggsave("figure1_facet_urlaubsziel.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

# side graph
ggplot(data_plot_long, aes(x=wave, y=prop)) + 
    geom_bar(position="dodge", show.legend = TRUE,stat = "identity", width=0.7) +
    scale_fill_manual(values= coloursample) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) 
ggsave("figure1_side_urlaubsziel.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

# mean line

data_plot_long_mean<-data_plot_long

ggplot(data_plot_long_mean, aes(wave, prop, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Urlaubsziel nein - 1 Urlaubsziel ja)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_urlaubsziel.png", units="in", width=8, height=5, type="cairo-png")



```


## Arbeit

### Berufsänderung

```{r berufsaen, include = TRUE,echo=FALSE, fig.width=9, fig.height=5}  

# Berufsänderung###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(berufa_home, berufa_urla, berufa_kuen, berufa_aufs, berufa_kurz, berufa_arbu, berufa_hafo, berufa_awsk, berufa_sozh, berufa_kasa, berufa_kaen, berufa_kang), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

#data_long$measurement <- fct_relevel(data_long$measurement, "nie", "an manchen Tagen", "mehrmals die Woche", "beinahe jeden Tag", "täglich")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("Home-office", "Holiday","Laid off","Increased work hours","Short-time work","unempl. benefits","härtefond","aws-loan","sozialhilfe","no work no benefits","no change","KA")



# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 3) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=7,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_berufsaen.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(1-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Home-office", "Holiday","Laid off","Increased work hours","Short-time work","unempl. benefits","härtefond","aws-loan","sozialhilfe","no work no benefits","no change","KA")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Share of respondents", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_berufsaen.png", units="in", width=8, height=5, type="cairo-png")
 
```

### Berufsstatus

```{r berufsstat, include = TRUE,echo=FALSE, fig.width=9, fig.height=5}  

# Berufsänderung###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

lr_gen_w1 <- lr_gen_w1 %>% mutate(berufst_incl0 = ifelse(wave==1,SD_EMPLSTATUS_FEB2020,berufst))

#without 0 = insert berufs instead of berufst_incl0
data_long <- gather(lr_gen_w1, condition, measurement, c(berufst_incl0), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

#data_long$measurement <- fct_relevel(data_long$measurement, "nie", "an manchen Tagen", "mehrmals die Woche", "beinahe jeden Tag", "täglich")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("Februar","W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long$condition) <- c("employment status")

levels(data_plot_long$measurement) <- c("Uns.erwerb. Privatwirtschaft","Uns.erwerb. Öffentlicher Dienst","Selbstständig erwerbstätig","Arbeitslos","Pensionist*in","Haushaltsführend","Schüler/in, Student/in","Arbeitsunfähig","Präsenz-/Zivildiener","In Elternkarenz","keine Angabe")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "Set3") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 3) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=3,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_berufstat.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")
 
```

### Zeitverwendung

```{r Zeitverwend, include = TRUE,echo=FALSE, fig.width=9, fig.height=5}
# Zeitverwend###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

#lr_gen_w1 <- lr_gen_w1 %<>% mutate_at(vars(zeitv_medi,zeitv_telc,zeitv_hobb,zeitv_eink,zeitv_betr,zeitv_arbe,zeitv_stud,zeitv_weit,zeitv_schl),funs(numeric))

lr_gen_w1 <- lr_gen_w1 %>%  rowwise() %>% mutate(zeitvsum = sum(zeitv_medi,zeitv_telc,zeitv_hobb,zeitv_eink,zeitv_betr,zeitv_arbe,zeitv_stud,zeitv_weit,zeitv_schl,na.rm=TRUE))

lr_gen_w1 <- lr_gen_w1 %>%  rowwise() %>% mutate(zeitv_medi_r=zeitv_medi/zeitvsum,
                                                 zeitv_telc_r=zeitv_telc/zeitvsum,
                                                 zeitv_hobb_r=zeitv_hobb/zeitvsum,
                                                 zeitv_eink_r=zeitv_eink/zeitvsum,
                                                 zeitv_betr_r=zeitv_betr/zeitvsum,
                                                 zeitv_arbe_r=zeitv_arbe/zeitvsum,
                                                 zeitv_stud_r=zeitv_stud/zeitvsum,
                                                 zeitv_weit_r=zeitv_weit/zeitvsum,
                                                 zeitv_schl_r=zeitv_schl/zeitvsum)


data_long <- gather(lr_gen_w1, condition, measurement, c(zeitv_medi,zeitv_telc,zeitv_hobb,zeitv_eink,zeitv_betr,zeitv_arbe,zeitv_stud,zeitv_weit,zeitv_schl), factor_key=TRUE)
#data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)/3600,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W2", "W5","W8","W11","W14","W17","W20","W23","W26","W29","W33")
levels(data_plot_long_mean$condition) <- c("Medienkonsum", "Chatten/Telefonieren","Hobbys","Hausarbeit/Einkaufen","Pflege/Kinderbetreuung","Bezahlte Arbeit","Studium","Weiterbildung","Schlafen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, color = condition)) +
  geom_line(aes(group = condition),size=1) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Hours", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_zeitverw_abs.png", units="in", width=8, height=5, type="cairo-png")



####RELATIVE


data_long <- gather(lr_gen_w1, condition, measurement, c(zeitv_medi_r,zeitv_telc_r,zeitv_hobb_r,zeitv_eink_r,zeitv_betr_r,zeitv_arbe_r,zeitv_stud_r,zeitv_weit_r,zeitv_schl_r), factor_key=TRUE)
#data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement),vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W2", "W5","W8","W11","W14","W17","W20","W23","W26","W29","W33")
levels(data_plot_long_mean$condition) <- c("Medienkonsum", "Chatten/Telefonieren","Hobbys","Hausarbeit/Einkaufen","Pflege/Kinderbetreuung","Bezahlte Arbeit","Studium","Weiterbildung","Schlafen","Summe")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, color = condition)) +
  geom_line(aes(group = condition),size=1) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Relative time allocation", x= "",colour="") +
    scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_zeitverw_rel.png", units="in", width=8, height=5, type="cairo-png")
 
```

### Arbeitsleben nach Corona

```{r al nach corona, echo=FALSE,  fig.width=9, fig.height=5}  

#Corona-Skeptizismus
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(alncor_frho,alncor_fraz,alncor_frtv,alncor_kran,alncor_digi,alncor_reis,alncor_priv,alncor_abst,alncor_kont), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W11","W25","W34")
levels(data_plot_long$condition) <- c("Freie Wahl\nHome-Office ","Freie Wahl\nArbeitszeiten","Freie Wahl\nTeilzeit oder\nVollzeit","Krankschreibungen\nvereinfachen","mehr Telekommunikation\nund digitale Lösungen","weniger Dienstreisen\nund Außentermine","Arbeits- und\nPrivatleben sollten\nklar getrennt sein","Möglichkeit zum\nAbstandhalten ","mehr Kontroll-\nmöglichkeiten\nfür Arbeitgeber")

levels(data_plot_long$measurement) <- c("Sehr dafür", "Eher dafür", "Teils-teils", "Eher dagegen", "Sehr dagegen")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=3,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_alncor.png", units="in", width=10, height=7)

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(4-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W11","W25","W34")
levels(data_plot_long_mean$condition) <- c("Freie Wahl\nHome-Office ","Freie Wahl\nArbeitszeiten","Freie Wahl\nTeilzeit oder\nVollzeit","Krankschreibungen\nvereinfachen","mehr Telekommunikation\nund digitale Lösungen","weniger Dienstreisen\nund Außentermine","Arbeits- und\nPrivatleben sollten\nklar getrennt sein","Möglichkeit zum\nAbstandhalten ","mehr Kontroll-\nmöglichkeiten\nfür Arbeitgeber")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.1,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 Sehr dagegen - 4 Sehr dafür)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) #+
    #scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_alncor.png", units="in", width=8, height=5, type="cairo-png")


```

### Gewünschte Ersatzleistungen für Kurzarbeit und Arbeitslosigkeit für unterschiedliche Einkommen

```{r arbeitsl, include = TRUE,echo=FALSE, fig.width=9, fig.height=5,warning=FALSE,message=FALSE}
##arbeisl###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

#lr_gen_w1 <- lr_gen_w1 %<>% mutate_at(vars(ersatz_linc_kurz,ersatz_hinc_kurz,ersatz_linc_arbl,ersatz_hinc_arbl),funs(numeric))

#Ersatzleistung: Person mit 1500 Euro Bruttoentgelt bei 0% Kurzarbeit
#Ersatzleistung: Person mit 5000 Euro Bruttoentgelt bei 0% Kurzarbeit
#Ersatzleistung: Person mit 1500 Euro Bruttoentgelt bei Arbeitslosigkeit
#Ersatzleistung: Person mit 5000 Euro Bruttoentgelt bei Arbeitslosigkeit
                                          

data_long <- gather(lr_gen_w1, condition, measurement, c(ersatz_linc_kurz,ersatz_hinc_kurz,ersatz_linc_arbl,ersatz_hinc_arbl), factor_key=TRUE)
#data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W10","W14","W20","W26","W29")
levels(data_plot_long_mean$condition) <- c("1500€ Kurzarbeit", "5000€ Kurzarbeit","1500€ Arbeitslosigkeit","5000€ Arbeitslosigkeit")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(condition, mean_measurement, color = wave)) +
  geom_point(aes(),position = position_dodge(width = 0.9),size=1.5) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(width = 0.9), width = 0.1,size=1) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Euros", x= "",colour="", title="Wie viel Bruttoeinkommeinkommen soll eine Person ersetzt bekommen") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_arbeitsl.png", units="in", width=8, height=5, type="cairo-png")
```

### Issue Battery

```{r issuebat, include = TRUE,echo=FALSE, fig.width=9, fig.height=5}
# ISSUEBATTERY###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

#Aussage: Politik muss soziale Ungleichheit bekämpfen
#Aussage: Sozialstaat macht Menschen träge und faul
#Aussage: Arbeitslosigkeit durch Staatsschulden bekämpfen
#Aussage: wenig Eingriff in Wirtschaft durch Politik 
#Aussage: Bevorzugung von Frauen bei gleicher Qualifikation 
#Aussage: Ausweitung der Befugnisse der Polizei
#Aussage: Zuwanderung nach Österreich nur in Ausnahmefällen
#Aussage: Umweltschutz um jeden Preis
#Aussage: Einkommensunterschiede in Österreich sind zu groß
#Aussage: Generationenvertrag
#Aussage: Reduktion von Einkommensunterschieden durch staatliche Maßnahmen


data_long <- gather(lr_gen_w1, condition, measurement, c(issue_ungl,issue_faul,issue_albe,issue_wirt,issue_frau,issue_poli,issue_zuwa,issue_umwe,issue_eink,issue_gena,issue_redu), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W5","W9","W10","W13","W15","W20","W24","W29","W30","W33","W34")
levels(data_plot_long$condition) <- c("Ungleichheit\nbekämpfen", "Sozialstaat macht\nMenschen träge","Arbeitslosigkeit\nbekämpfen","Wenig Eingriff\nin Wirtschaft","Bevorzugung\nvon Frauen","Befugnisse\nder Polizei","Zuwanderung nur\nin Ausnahmefällen","Umweltschutz","Einkommensunterschiede\nzu groß","Generationenvertrag","Reduktion von\nEinkommensunterschieden")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="" , title="Issue Battery") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=3,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_issuebat.png", units="in", width=7, height=6)

#MEAN
                                        

#data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W5","W9","W10","W13","W15","W20","W24","W29","W30","W33","W34")
levels(data_plot_long_mean$condition) <-c("Ungleichheit\nbekämpfen", "Sozialstaat macht\nMenschen träge","Arbeitslosigkeit\nbekämpfen","Wenig Eingriff\nin Wirtschaft","Bevorzugung\nvon Frauen","Befugnisse\nder Polizei","Zuwanderung nur\nin Ausnahmefällen","Umweltschutz","Einkommensunterschiede\nzu groß","Generationenvertrag","Reduktion von\nEinkommensunterschieden")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")


# mean line
ggplot(data_plot_long_mean, aes(condition, mean_measurement, color = wave)) +
  geom_point(aes(),position = position_dodge(width = 0.9),size=1.5) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax),position = position_dodge(width = 0.9), width = 0.1,size=1) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Durchschnittliche Zustimmung\n1=Trifft überhaupt-nicht zu 6=trifft sehr zu", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE))  +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_issue.png", units="in", width=12, height=5, type="cairo-png")
```

### Wohlfartsstaatliche Einstellungen und Prozedurale Gerechtigkeit

```{r welfshov, include = TRUE,echo=FALSE, fig.width=9, fig.height=5}
# Welfare attitudes and Procedural justice###############################################################################

#Aussage: Die meisten Arbeitslosen suchen nicht wirklich nach einer Arbeitsstelle.
#Aussage: Viele Leute mit geringem Einkommen erhalten weniger Sozialleistungen, als ihnen gesetzlich zusteht.
#Aussage: Es gelingt vielen Leuten, Sozialleistungen zu erhalten, die keinen Anspruch darauf haben.

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(welfshov_such,welfshov_zust,welfshov_sozl), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W10","W14","W20","W26","W29")
levels(data_plot_long$condition) <- c("Arbeitslosen suchen\nnicht nach Arbeit", "Leute mit geringem Einkommen\nerhalten weniger Sozialleistungen,\nals ihnen gesetzlich zusteht","Es gelingt vielen Leuten,\nSozialleistungen zu erhalten,\ndie keinen Anspruch darauf haben.")


#faceted by wave
ggplot(data_plot_long, aes(x=measurement, y=prop)) + 
    geom_bar(aes(fill = wave), show.legend = FALSE,stat = "identity") +
    geom_text(aes(label=round(prop*100, digits = 1)), vjust=-.3, color="black", size=2) +
    facet_grid(wave~condition) +
    labs(y = "Prozent", x= "Einschätzung",fill="Welle") +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    scale_fill_brewer(palette = "Set3") +
  theme(axis.text.x  = element_text(angle=45, hjust = 1))
ggsave("figure1_facet_welfshov.png", units="in", width=6.5, height=4)

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="" , title="Welfare attitudes and Procedural justice") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=3,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_welfshov.png", units="in", width=7, height=6)

#MEAN
                                        

#data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W10","W14","W20","W26","W29")
levels(data_plot_long_mean$condition) <- c("Arbeitslosen suchen\nnicht nach Arbeit", "Leute mit geringem Einkommen\nerhalten weniger Sozialleistungen,\nals ihnen gesetzlich zusteht","Es gelingt vielen Leuten,\nSozialleistungen zu erhalten,\ndie keinen Anspruch darauf haben.")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(condition, mean_measurement, colour=wave)) + #,color = condition
  geom_point(aes(),position = position_dodge(width = 0.9),size=1.5) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax),position = position_dodge(width = 0.9), width = 0.1,size=1) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zustimmung\n(1= lehne stark ab, 5= stimme stark zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_welfshov.png", units="in", width=8, height=5, type="cairo-png")
```

### Eingeschätzte Verantwortung der Regierung

```{r verreg, include = TRUE,echo=FALSE, fig.width=9, fig.height=5}
# Verantwortung der Regierung###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

#Verantwortung der Regierung: einen angemessenen Lebensstandard für Rentner und Pensionisten sicherstellen.
#Verantwortung der Regierung: einen angemessenen Lebensstandard für Arbeitslose sicherstellen.
#Verantwortung der Regierung: ausreichend Kinderbetreuungsdienste für berufstätige Eltern sicherstellen.
#Verantwortung der Regierung: Universitäre Ausbildung in guter Qualität für alle jungen Menschen ermöglichen.
#Verantwortung der Regierung: hochqualitative gesundheitliche Versorgung für alle Menschen in Österreich sicherstellen.


data_long <- gather(lr_gen_w1, condition, measurement, c(verant_pens,verant_arbl,verant_kind,verant_univ,verant_gesu), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)
data_long$measurement <- fct_relevel(data_long$measurement,"0 = Sollte gar nicht in der Verantwortung der Regierung liegen","1","2","3","4","5","6","7","8","9","10 = Sollte ganz in der Verantwortung der Regierung liegen")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W10","W14","W22")
levels(data_plot_long$condition) <- c("angemessenen Lebensstandard\nfür Pensionisten", "angemessenen Lebensstandard\nfür Arbeitslose","ausreichend\nKinderbetreuungsdienste","Universitäre\nAusbildung","gesundheitliche\nVersorgung")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="" , title="Verantwortung der Regierung") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=3,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_verantreg.png", units="in", width=8, height=6)

#MEAN
                                        

#data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W10","W14","W22")
levels(data_plot_long_mean$condition) <- c("angemessenen Lebensstandard\nfür Pensionisten", "angemessenen Lebensstandard\nfür Arbeitslose","ausreichend\nKinderbetreuungsdienste","Universitäre\nAusbildung","gesundheitliche\nVersorgung")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(condition, mean_measurement, colour=wave)) + #,color = condition
  geom_point(aes(),position = position_dodge(width = 0.9),size=1.5) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax),position = position_dodge(width = 0.9), width = 0.1,size=1) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zustimmung\n(0= gar nicht, 10= ganz)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_verantreg.png", units="in", width=8, height=5, type="cairo-png")
```

### Staatliche Maßnahmen: Arten Form und Zielgruppe

```{r staatmas, include = TRUE,echo=FALSE, fig.width=9, fig.height=5}
# Staatliche Maßnahmen -Arten Form und Zielgruppe###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

#Staatliche Maßnahmen: nur nachhaltige Unternehmen vs. alle gleichermaßen 
#Staatliche Maßnahmen: nur ärmeren Haushalten vs. allen Haushalten gleichermaßen
#Staatliche Maßnahmen: Geld ausbezahlen vs. Gutscheine/Prämien
#Staatliche Maßnahmen: nachhaltige Produkte förder vs. alle gleichermaßen
#Staatliche Maßnahmen: Unternehmen ausbezahlen vs. direkt Bürger ausbezahlen 

lr_gen_w1$staatmas_unte[lr_gen_w1$wave<=8|lr_gen_w1$wave>=10]<-NA
lr_gen_w1$staatmas_haus[lr_gen_w1$wave<=8|lr_gen_w1$wave>=10]<-NA
lr_gen_w1$staatmas_form[lr_gen_w1$wave<=8|lr_gen_w1$wave>=10]<-NA
lr_gen_w1$staatmas_prod[lr_gen_w1$wave<=8|lr_gen_w1$wave>=10]<-NA
lr_gen_w1$staatmas_empf[lr_gen_w1$wave<=8|lr_gen_w1$wave>=10]<-NA

lr_gen_w1$staatmas_unte[lr_gen_w1$staatmas_unte=="keine Angabe"]<-NA
lr_gen_w1$staatmas_haus[lr_gen_w1$staatmas_haus=="keine Angabe"]<-NA
lr_gen_w1$staatmas_form[lr_gen_w1$staatmas_form=="keine Angabe"]<-NA
lr_gen_w1$staatmas_prod[lr_gen_w1$staatmas_prod=="keine Angabe"]<-NA
lr_gen_w1$staatmas_empf[lr_gen_w1$staatmas_empf=="keine Angabe"]<-NA


lr_gen_w1$staatmas_unte <- as.numeric(lr_gen_w1$staatmas_unte)
lr_gen_w1$staatmas_haus <- as.numeric(lr_gen_w1$staatmas_haus)
lr_gen_w1$staatmas_form <- as.numeric(lr_gen_w1$staatmas_form)
lr_gen_w1$staatmas_prod <- as.numeric(lr_gen_w1$staatmas_prod)
lr_gen_w1$staatmas_empf <- as.numeric(lr_gen_w1$staatmas_empf)

data_long <- gather(lr_gen_w1, condition, measurement, c(staatmas_unte,staatmas_haus,staatmas_form,staatmas_prod,staatmas_empf), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)
#data_long$measurement <- fct_relevel(data_long$measurement,"0 = Sollte gar nicht in der Ver-antwortung der Regierung liegen","1","2","3","4","5","6","7","8","9","10 = Sollte ganz in der Ver-antwortung der Regierung liegen")


data_plot_long<-data_long %>% filter(!is.na(measurement)&measurement!="99") %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W9")
levels(data_plot_long$condition) <- c("1=nur nachhaltige Unternehmen\nvs.\n5=alle gleichermaßen", "1=nur ärmeren Haushalten\nvs.\n5=allen gleichermaßen","1=Geld ausbezahlen\nvs.\n5=Gutscheine/Prämien","1=nur nachhaltige Produkte\nvs.\n5=alle gleichermaßen","1=Unternehmen ausbezahlen\nvs.\n5=Bürger ausbezahlen")


cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="" , title="Wer/Was soll unterstützt werden und wie?") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=3,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_staatmas.png", units="in", width=9, height=6)

#MEAN
                                        

#data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W9")
levels(data_plot_long_mean$condition) <- c("1=nur nachhaltige Unternehmen\nvs.\n5=alle gleichermaßen", "1=nur ärmeren Haushalten\nvs.\n5=allen gleichermaßen","1=Geld ausbezahlen\nvs.\n5=Gutscheine/Prämien","1=nur nachhaltige Produkte\nvs.\n5=alle gleichermaßen","1=Unternehmen ausbezahlen\nvs.\n5=Bürger ausbezahlen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(condition, mean_measurement)) + #,color = condition
  geom_point(aes(group = condition),position = position_dodge(width = 0.9),size=1.5) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax),position = position_dodge(width = 0.9), width = 0.1,size=1) +
  geom_hline(yintercept=2.5) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zustimmung\n(<2.5= eher ersteres, >2.5 = eher letzteres)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_staatmas.png", units="in", width=9, height=5, type="cairo-png")
```


### Arbeitsattribbutspräferenzen
```{r arbeitsattributspraferenzen, echo=FALSE, fig.width=9, fig.height=5, results='asis'}
# Verantwortung der Regierung###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

#Jobattribut-Präferenz: Ein sicherer Arbeitsplatz
#Jobattribut-Präferenz: Ein hohes Einkommen
#Jobattribut-Präferenz: Ein Job, bei dem man anderen Menschen helfen kann
#Jobattribut-Präferenz: Ein Job, der es einem erlaubt, eigenständig zu arbeiten
#Jobattribut-Präferenz: Ein Job, der es einem erlaubt, neue Dinge zu lernen
#Jobattribut-Präferenz: Ein Job, der einem viel Freizeit lässt
#Jobattribut-Präferenz: Ein Job, der es einem erlaubt, kreativ zu sein
#Jobattribut-Präferenz: Viel Kontakt mit anderen Menschen
#Jobattribut-Präferenz: Ein Job, der einem ein gutes Selbstwertgefühl gibt
#Jobattribut-Präferenz: Arbeit und andere Verpflichtungen unter einem Hut

data_long <- gather(lr_gen_w1, condition, measurement, c(joa_swc,joa_hin,joa_hel,joa_ind,joa_lea,joa_lei,joa_cre,joa_con,joa_int,joa_int,joa_oth), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)
#levels(data_long$measurement) 
data_long$measurement <- fct_relevel(data_long$measurement,"Sehr unwichtig","Eher unwichtig","Eher wichtig","Sehr wichtig")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W13","W21","W25","W34")
levels(data_plot_long$condition) <- c("sicherer\nArbeitsplatz", "hohes\nEinkommen","Job, bei\ndem man anderen\nMenschen helfen kann","Job, der es\neinem erlaubt,\neigenständig zu arbeiten","Job, der es\neinem erlaubt,\nneue Dinge zu lernen","Job, der\neinem viel\nFreizeit lässt","Job, der es\neinem erlaubt,\nkreativ zu sein","Viel Kontak\nmit anderen\nMenschen","Job, der\neinem ein gutes\nSelbstwertgefühl gibt","Arbeit und\nandere Verpflichtungen\nunter einem Hut")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="" , title="") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=3,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_jobattribp.png", units="in", width=8, height=6)

#MEAN
                                        

#data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W11","W21","W25","W34")
levels(data_plot_long_mean$condition) <- c("sicherer\nArbeitsplatz", "hohes\nEinkommen","Job, bei\ndem man anderen\nMenschen helfen kann","Job, der es\neinem erlaubt,\neigenständig zu arbeiten","Job, der es\neinem erlaubt,\nneue Dinge zu lernen","Job, der\neinem viel\nFreizeit lässt","Job, der es\neinem erlaubt,\nkreativ zu sein","Viel Kontak\nmit anderen\nMenschen","Job, der\neinem ein gutes\nSelbstwertgefühl gibt","Arbeit und\nandere Verpflichtungen\nunter einem Hut")#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(condition, mean_measurement, colour=wave)) + #,color = condition
  geom_point(aes(),position = position_dodge(width = 0.9),size=1.5) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax),position = position_dodge(width = 0.9), width = 0.1,size=1) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zustimmung\n(0= sehr unwichtig, 3= sehr wichtig)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_jobattribp.png", units="in", width=10, height=5, type="cairo-png")
```

### Arbeitswerte

```{r arbeitswerte, echo=FALSE, fig.width=9, fig.height=5, results='asis'}
# Verantwortung der Regierung###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

#Aussage: Arbeit ist eine Pflicht gegenüber der Gesellschaft.
#Aussage: Arbeit immer vor Freizeit
#Aussage: Mann soll Geld verdienen, Frau sich um Haushalt kümmern


data_long <- gather(lr_gen_w1, condition, measurement, c(wo_dty,wo_lei,wo_mal), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)
#levels(data_long$measurement) 
data_long$measurement <- fct_relevel(data_long$measurement,"Stimme ueberhaupt nicht zu","Stimme eher nicht zu","Stimme eher zu","Stimme voll und ganz zu")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W11","W21","W25","W34")
levels(data_plot_long$condition) <- c("Arbeit ist eine\nPflicht gegenüber\nder Gesellschaft", "Arbeit sollte\nimmer vor\nFreizeit kommen","Männer sollen Geld\nverdienen, Frauen\num den Haushalt kümmern")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="" , title="") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=3,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_arbeitsw.png", units="in", width=8, height=6)

#MEAN
                                        

#data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W11","W21","W25","W34")
levels(data_plot_long_mean$condition) <- c("Arbeit ist eine\nPflicht gegenüber\nder Gesellschaft", "Arbeit sollte\nimmer vor\nFreizeit kommen","Männer sollen Geld\nverdienen, Frauen sich\num den Haushalt kümmern")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(condition, mean_measurement, colour=wave)) + #,color = condition
  geom_point(aes(),position = position_dodge(width = 0.9),size=1.5) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax),position = position_dodge(width = 0.9), width = 0.1,size=1) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zustimmung\n(0= stimme ueberhaupt nicht zu, 3= stimme voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_arbeitsw.png", units="in", width=8, height=5, type="cairo-png")
```

### Lotto Frage

```{r lotto, echo=FALSE, fig.width=9, fig.height=5, results='asis'}
# lotto Frage###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(lottoq), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)
#levels(data_long$measurement) 

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$condition) <- c("Lotto Frage")
levels(data_plot_long$wave) <-c("W11","W21","W25","W34")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="" , title="") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=3,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_lotto.png", units="in", width=8, height=6)

#MEAN
                                        

#data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W11","W21","W25","W34")
levels(data_plot_long_mean$condition) <- c("Lotto Frage")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(condition, mean_measurement, colour=wave)) + #,color = condition
  geom_point(aes(),position = position_dodge(width = 0.9),size=1.5) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax),position = position_dodge(width = 0.9), width = 0.1,size=1) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "\n0= aufhoeren zu arbeiten, 1= weiterhin arbeiten", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_lotto.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")
```

### Zufriedenheit mit Arbeitsbedingungen

```{r arbeitsbedienungen, echo=FALSE, fig.width=9, fig.height=5, results='asis'}
# arbeitsbedingungen Frage###############################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(zuf_arb), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)
#levels(data_long$measurement) 
data_long$measurement <- fct_relevel(data_long$measurement,"Ueberhaupt nicht zufrieden","Nicht sehr zufrieden","Zufrieden","Sehr zufrieden")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$condition) <- c("Zufriedenheit: Arbeitsbedingungen")
levels(data_plot_long$wave) <-c("W11","W14","W21","W29")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="" , title="") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=3,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_arbeitsbedzuf.png", units="in", width=8, height=6)

#MEAN
 
#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W11","W14","W21","W29")
levels(data_plot_long_mean$condition) <- c("Zufriedenheit: Arbeitsbedingungen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(condition, mean_measurement, colour=wave)) + #,color = condition
  geom_point(aes(),position = position_dodge(width = 0.9),size=1.5) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax),position = position_dodge(width = 0.9), width = 0.1,size=1) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zustimmung\n(0= Ueberhaupt nicht zufrieden, 3= Sehr zufrieden)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(color=guide_legend(ncol=4,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_arbeitsbedzuf.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")
```

### Zufriedenheit in unterschiedlichen Lebensbereichen

```{r zuflebesb, echo=FALSE, fig.width=9, fig.height=5}  


#Zufriedenheit Lebensbereiche##########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(zuf_fam,zuf_par,zuf_ber,zuf_frz), factor_key=TRUE)  #only waves where the full sample received the questions
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "sehr zufrieden", "eher zufrieden","weniger zufrieden","nicht zufrieden", "trifft nicht zu (keine Familie/ Partner/in/ nicht berufstaetig)")
levels(data_long$measurement) <- c("sehr zufrieden", "eher zufrieden","weniger zufrieden","nicht zufrieden", "keine Familie/ Partner/in/ nicht berufstaetig")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W5","W10","W13","W16","W19","W22","W24","W26","W29","W33")
levels(data_plot_long$condition) <- c("Familienleben","Partnerschaft","Beruf","Freizeit")


#levels(data_plot_long$measurement) <- c("0 = gar nicht bereit","1", "2", "3", "4", "5", "6", "7", "8", "9","10 = sehr bereit")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_zuflebb.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 0= äußerst unzufrieden 10= äußerst zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)&measurement!="keine Familie/ Partner/in/ nicht berufstaetig") %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(3-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W5","W10","W13","W16","W19","W22","W24","W26","W29","W33")
levels(data_plot_long_mean$condition) <- c("Familienleben","Partnerschaft","Beruf","Freizeit")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zustimmung  \n (0 nicht zufrieden - 3 sehr zufrieden)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) 
ggsave("figure1_mean_zuflebb.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

```

### Wichtigkeit von unterschiedlichen Lebensbereichen

```{r wichlebesb, echo=FALSE, fig.width=9, fig.height=5}  


#Wichtigkeit Lebensbereiche##########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(wert_par,wert_fam,wert_arb,wert_frz,wert_fre,wert_ver,wert_rlg,wert_pol), factor_key=TRUE)  #only waves where the full sample received the questions
data_long$measurement<-as.factor(data_long$measurement)

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W5","W13","W17","W30")
levels(data_plot_long$condition) <- c("Partnerschaft","Familie und\nKinder","Beruf und\nArbeit","Freizeit","Freunde","Verwandtschaft","Religion und\nKirche","Politik und\nöffentliches Leben")


#levels(data_plot_long$measurement) <- c("0 = gar nicht bereit","1", "2", "3", "4", "5", "6", "7", "8", "9","10 = sehr bereit")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_wichlebb.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 0= äußerst unzufrieden 10= äußerst zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)&measurement!="keine Familie/ Partner/in/ nicht berufstaetig") %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean((as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W5","W13","W17","W30")
levels(data_plot_long_mean$condition) <- c("Partnerschaft","Familie und\nKinder","Beruf und\nArbeit","Freizeit","Freunde","Verwandtschaft","Religion und\nKirche","Politik und\nöffentliches Leben")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Wichtigkeit  \n (0 unwichtig - 6 sehr wichtig)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) 
ggsave("figure1_mean_wichlebb.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

```

### Werte Wichtigkeit

```{r wertewi, echo=FALSE, fig.width=9, fig.height=5}  


#Werte##########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(werte_ger,werte_fre,werte_dem,werte_rec,werte_sol,werte_sic), factor_key=TRUE)  #only waves where the full sample received the questions


#mean line 0= äußerst unzufrieden 10= äußerst zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean((as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W5","W30")
levels(data_plot_long_mean$condition) <- c("Gerechtigkeit","Freiheit","Demokratie","Rechtsstaatlichkeit","Solidarität","Sicherheit")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Wichtigkeit  \n (0  - 100 verteile Punkte)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) 
ggsave("figure1_mean_wertewi.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

```

### Risikobereitschaft

```{r risikobereit, echo=FALSE, fig.width=9, fig.height=5}  


#risikobereitschaft ##########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, risikob, factor_key=TRUE) %>% filter(wave %in% c(1,6,11,13,15,18,21,24,27,30) & measurement!="88") # only waves where the full sample received the questions
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "0","1", "2", "3", "4", "5", "6", "7", "8", "9","10")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1","W6","W11","W13","W15","W18","W21","W24","W27","W30")
levels(data_plot_long$condition) <- c("Risikobereitschaft")


levels(data_plot_long$measurement) <- c("0 = gar nicht bereit","1", "2", "3", "4", "5", "6", "7", "8", "9","10 = sehr bereit")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_risikob.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 0= äußerst unzufrieden 10= äußerst zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)&measurement!="88") %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W1","W6","W11","W13","W15","W18","W21","W24","W27","W30")
levels(data_plot_long_mean$condition) <- c("Risikobereitschaft")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Bereit Risiko einzugehen  \n (0 gar nicht bereit - 10 sehr bereit)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_risikob.png", units="in", width=8, height=5, type="cairo-png")

```

### Locus of control

```{r loc, echo=FALSE, fig.width=9, fig.height=5}  


#Locus of control ##########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(psy_leb,psy_bel,psy_fbe,psy_sci), factor_key=TRUE) %>% filter(wave %in% c(1,6,11,13,15,18,21,24,27,30) & measurement!="keine Angabe" & measurement!="Weiss nicht") #only waves where the full sample received the questions
data_long$measurement<-as.factor(data_long$measurement)

#data_long$measurement <- fct_relevel(data_long$measurement, "0","1", "2", "3", "4", "5", "6", "7", "8", "9","10")


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W1","W6","W13","W15","W18","W21","W24","W27","W30")#"W11"
levels(data_plot_long$condition) <- c("Leben selbst\nin der Hand","Wenn Anstrengung\ndann auch Erfolg","Leben wird\nfremdbestimmt","Pläne von Schicksal\noft durchkreuzt")


#levels(data_plot_long$measurement) <- c("0 = gar nicht bereit","1", "2", "3", "4", "5", "6", "7", "8", "9","10 = sehr bereit")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_loc.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 0= äußerst unzufrieden 10= äußerst zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)&measurement!="88") %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(4-(as.numeric(measurement)-1),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W1","W6","W13","W15","W18","W21","W24","W27","W30")#"W11"
levels(data_plot_long_mean$condition) <- c("Leben selbst\nin der Hand","Wenn Anstrengung\ndann auch Erfolg","Leben wird\nfremdbestimmt","Pläne von Schicksal\noft durchkreuzt")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zustimmung  \n (0 Trifft nicht zu - 4 Trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) 
ggsave("figure1_mean_loc.png", units="in", width=8, height=5, type="cairo-png")

```

### Zukunftserwartungen

```{r zukunftserwartungen, echo=FALSE, fig.width=9, fig.height=5}  


#Zukunftserwartungen##########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(zukerw_pers,zukerw_aut,zukerw_eur), factor_key=TRUE)  #only waves where the full sample received the questions
data_long$measurement<-as.factor(data_long$measurement)
data_long$measurement <- fct_relevel(data_long$measurement, "Deutlich verschlechtern","Etwas verschlechtern","Gleich bleiben","Etwas verbessern","Deutlich verbessern")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W5","W10","W16","W19","W23","W27","W30","W33","W34")
levels(data_plot_long$condition) <- c("persönliche\nLebensumstände ","Lebensumstände\nin Österreich","Lebensumstände\nin der EU")


#levels(data_plot_long$measurement) <- c("0 = gar nicht bereit","1", "2", "3", "4", "5", "6", "7", "8", "9","10 = sehr bereit")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_zukunftser.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 0= äußerst unzufrieden 10= äußerst zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)&measurement!="keine Familie/ Partner/in/ nicht berufstaetig") %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean((as.numeric(measurement)-3),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W5","W10","W16","W19","W23","W27","W30","W33","W34")
levels(data_plot_long_mean$condition) <- c("persönliche\nLebensumstände ","Lebensumstände\nin Österreich","Lebensumstände\nin der EU")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Lebensumstände  \n (-2 Deutlich verschlechtern - 2 Deutlich verbessern)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) 
ggsave("figure1_mean_zukunftser.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

```

### Zuwanderung

```{r zuwanderung, echo=FALSE, fig.width=9, fig.height=5}  


#Zukunftserwartungen##########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(zuw_ber,zuw_wir,zuw_sta), factor_key=TRUE)  #only waves where the full sample received the questions
data_long$measurement<-as.factor(data_long$measurement)
#data_long$measurement <- fct_relevel(data_long$measurement, "Deutlich verschlechtern","Etwas verschlechtern","Gleich bleiben","Etwas verbessern","Deutlich verbessern")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W9","W13","W18","W24","W30","W34")
levels(data_plot_long$condition) <- c("Zuwanderer bereichern\nösterreichische Kultur","Zuwanderer sind\ngut für die Wirtschaft","Zugang zur Staatsbürgerschaft\nsollte erleichtert werden")


#levels(data_plot_long$measurement) <- c("0 = gar nicht bereit","1", "2", "3", "4", "5", "6", "7", "8", "9","10 = sehr bereit")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_zuwanderung.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 0= äußerst unzufrieden 10= äußerst zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)&measurement!="keine Familie/ Partner/in/ nicht berufstaetig") %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(5-(as.numeric(measurement)),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W9","W13","W18","W24","W30","W34")
levels(data_plot_long_mean$condition) <- c("Zuwanderer bereichern\nösterreichische Kultur","Zuwanderer sind\ngut für die Wirtschaft","Zugang zur Staatsbürgerschaft\nsollte erleichtert werden")
cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zustimmung  \n (0 = Trifft ueberhaupt nicht zu - 4 = Trifft sehr zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) 
ggsave("figure1_mean_zuwanderung.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

```

### Gefahrenwarnehmung Ukraine Krieg

```{r gefukraine, echo=FALSE, fig.width=9, fig.height=5}  


#Zukunftserwartungen##########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(gef_war_sec_aut,gef_war_eco_aut), factor_key=TRUE)  #only waves where the full sample received the questions
data_long$measurement<-as.factor(data_long$measurement)
#data_long$measurement <- fct_relevel(data_long$measurement, "Deutlich verschlechtern","Etwas verschlechtern","Gleich bleiben","Etwas verbessern","Deutlich verbessern")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W30","W33","W34")
levels(data_plot_long$condition) <- c("Gefahr für\nSicherheit in Ö","Gefahr für\nWirtschaft in Ö")


#levels(data_plot_long$measurement) <- c("0 = gar nicht bereit","1", "2", "3", "4", "5", "6", "7", "8", "9","10 = sehr bereit")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_gefukraine.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 0= äußerst unzufrieden 10= äußerst zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)&measurement!="keine Familie/ Partner/in/ nicht berufstaetig") %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(5-(as.numeric(measurement)),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W30","W33","W34")
levels(data_plot_long_mean$condition) <- c("Gefahr für\nSicherheit in Ö","Gefahr für\nWirtschaft in Ö")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Gefahr  \n (0 = sehr klein - 4 = sehr groß)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) 
ggsave("figure1_mean_gefukraine.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

```

### Angemessenheit Reaktionen Ukraine

```{r angemessenuk, echo=FALSE,  fig.width=9, fig.height=5}  

# Angemessenheit der Maßnahmen######################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, reakt_war_angem, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W30","W33","W34")
levels(data_plot_long$condition) <- c("Reaktion der Regierung auf Russland: Angemessenheit")

levels(data_plot_long$measurement) <- c("überhaupt nicht ausreichend", "eher nicht ausreichend", "angemessen", "eher zu stark", "zu extrem")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    #facet_wrap(~condition,ncol = 4) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=6,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_angemuk.png", units="in", width=7.5, height=4.5)

cat("  \n")

#mean line 1 überhaupt nicht effektiv - 5 sehr effektiv
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wavedate,condition) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wavedate,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
#data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

#levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Angemesseneheit der gesetzlichen Maßnahmen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wavedate, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 5,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (0 überhaupt nicht ausreichend - 4 zu extrem)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_date(date_breaks = "month",date_labels = "%b-%y",guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_angemuk.png", units="in", width=8, height=5, type="cairo-png")

```

### Einstellungen Ukraine Krieg

```{r einstkrieg, echo=FALSE, fig.width=9, fig.height=5}  

#Zukunftserwartungen##########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(war_nato,war_sank,war_rmed,war_fluc,war_simp), factor_key=TRUE)  #only waves where the full sample received the questions
data_long$measurement<-as.factor(data_long$measurement)
#data_long$measurement <- fct_relevel(data_long$measurement, "Deutlich verschlechtern","Etwas verschlechtern","Gleich bleiben","Etwas verbessern","Deutlich verbessern")

data_plot_long<-data_long %>% filter(!is.na(measurement)) %>% 
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,measurement) %>%
  summarise(n=survey_total(,vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(prop = n/sum(n),ymax=prop+1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n, ymin=prop-1.96*sqrt(n/sum(n))*(1-(n/sum(n)))/n)

data_plot_long$wave<-as.factor(data_plot_long$wave)
levels(data_plot_long$wave) <-c("W30","W33","W34")
levels(data_plot_long$condition) <- c("NATO Beitritt\nÖsterreich","Beteiligungen\nan Sanktionen\nSchaden in Kauf nehmen","Österreich sollte\nrussische Medien\neinschränken","Aufnahme\nFlüchtlinge\naus Ukraine","Stopp von\nEnergieimporten\naus Russland")


#levels(data_plot_long$measurement) <- c("0 = gar nicht bereit","1", "2", "3", "4", "5", "6", "7", "8", "9","10 = sehr bereit")

cat("  \n")

# stacked graph
ggplot(data_plot_long, aes(fill=measurement,x=wave, y=prop)) + 
    geom_bar(position="stack", show.legend = TRUE,stat = "identity", width=0.7) +
    geom_text(aes(label=round(prop*100, digits = 0)), position=position_stack(vjust=0.5), color="black", size=2) +
    scale_fill_brewer(palette = "RdYlBu", direction=-1) +  #alternative:Blues
    labs(y = "Prozent", x= "",fill="") +
    facet_wrap(~condition,ncol = 5) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_hc() +
    #theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=2,byrow=TRUE)) + 
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_stack_einstkrieg.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

#mean line 0= äußerst unzufrieden 10= äußerst zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)&measurement!="keine Familie/ Partner/in/ nicht berufstaetig") %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition) %>%
  summarise(mean_measurement=survey_mean(5-(as.numeric(measurement)),vartype = c("se"))) %>% group_by(wave,condition) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W30","W33","W34")
levels(data_plot_long_mean$condition) <- c("NATO Beitritt\nÖsterreich","Beteiligungen\nan Sanktionen\nSchaden in Kauf nehmen","Österreich sollte\nrussische Medien\neinschränken","Aufnahme\nFlüchtlinge\naus Ukraine","Stopp von\nEnergieimporten\naus Russland")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Zustimmung  \n (0 = Trifft ueberhaupt nicht zu - 4 = Trifft sehr zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=4,nrow=2,byrow=TRUE)) 
ggsave("figure1_mean_einstkrieg.png", units="in", width=8, height=5, type="cairo-png")

cat("  \n")

```

## Bundesländer


```{r bundeslaenderanalysen, echo=FALSE, fig.width=9, fig.height=5, results='asis'}
#GESUNDHEITLICH#########################

lr_gen_w1 <- bern_data_long2_factored %>% filter(ges_per_gefahr!=99 & ges_pub_gefahr!=99) %>% ungroup() 

data_long <- gather(lr_gen_w1, condition, measurement, ges_per_gefahr:ges_pub_gefahr, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

#mean line attention recoding 5= sehr groß 1= sehr klein
data_plot_long_mean <- data_long  %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, SD_BULA) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition, SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)

data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)
levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Persönlich", "Für die österr. Bevölkerung")
#levels(data_plot_long_mean$SD_BULA) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung der gesundheitlichen Gefahr \n (1 sehr klein - 5 sehr groß)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
     scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bula_gesundh.png", units="in", width=8, height=5, type="cairo-png")

#WIRTSCHAFTLICH#############################

lr_gen_w1 <- bern_data_long2_factored %>% filter(wir_per_gefahr!=99 & wir_pub_gefahr!=99) %>% ungroup() 

data_long <- gather(lr_gen_w1, condition, measurement, wir_per_gefahr:wir_pub_gefahr, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


#mean line attention recoding 5= sehr groß 1= sehr klein
data_plot_long_mean <- data_long  %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, SD_BULA) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition, SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)

data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)
levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Persönlich", "Für die österr. Bevölkerung")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")
cat("  \n")
# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung der wirtschaftlichen Gefahr \n (1 sehr klein - 5 sehr groß)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bula_wirtsch.png", units="in", width=8, height=5, type="cairo-png")


# Demokratie ###################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, demokratie, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= sehr unzufireden 5= sehr zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, SD_BULA) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition, SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)


levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Zufriedenheit mit Demokratie")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")


# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
  facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 sehr unzufrieden - 5 sehr zufrieden)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bula_demo.png", units="in", width=8, height=5, type="cairo-png")

# Bilanz der Regierung:###########################################################################
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, blianz_reg, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

cat("  \n")

#mean line 1 Sehr unzufrieden - 5 Sehr zufrieden
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, SD_BULA) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wave,condition, SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Bilanz der Arbeit und Leistung der Regierung")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
   facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Sehr unzufrieden - 5 Sehr zufrieden)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bula_bilanz.png", units="in", width=8, height=5, type="cairo-png")

# Zusammenhalt ###################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, zusammenhalt, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)


#mean line 1= Trifft gar nicht zu 5= Trifft voll und ganz zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, SD_BULA) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition, SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Zusammenhalt in der Gesellschaft erhöht")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
  facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Trifft gar nicht zu - 5 Trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bula_zusam.png", units="in", width=8, height=5, type="cairo-png")


# Ausgehgründe###############################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(ausgeh_arbeit:ausgeh_andere,ausgeh_sonsbes), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "nie", "an manchen Tagen", "mehrmals die Woche", "beinahe jeden Tag", "taeglich")

#mean line 1= nie 5= täglich
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, SD_BULA) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition, SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W3","W4","W5","W6","W7","W8","W9","W10","W11","W12","W13","W14","W15","W16","W17","W18","W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Arbeit", "Sport","Freunde","Medikamente","Essen","Haustier","Langeweile","Andere","Sonstige Besorgungen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1) +
  #geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1) +
    facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 nie - 5 täglich)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
    theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=5,nrow=1,byrow=TRUE))  +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bula_ausgeh.png", units="in", width=8, height=5, type="cairo-png")


#Maßnahmen der Regierung Wünsche Richtungen#####################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, mas_gmehrheit,mas_wissenschaft,mas_compliance,mas_geswirt,mas_vorbereitk,mas_arbnarbeitg, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

cat("  \n")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, SD_BULA) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition, SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W4","W6","W8","W10","W12","W17","W20","W23","W30")
levels(data_plot_long_mean$condition) <- c("An Maßnahmen festhalten\nauch wenn Mehrheit\nder Bev. dagegegen", "Pol. Entscheidungen auf\nGrundlage wissenschaftl.\nErkenntnisse besser","Pol. Entscheidungen\nmuss manauf jeden Fall\nFolge leisten","Gesundheit der Menschen\nimmer über wirtschaftliche\nInteressen zu stellen","Sollte auf\nalles vorbereitet sein","Sollte jetzt in erster Linie\n Unternehmen stärken,\nanstatt Arbeitnehmer*Innen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")


# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1) +
  #geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 trifft gar nicht zu - 5 trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=3,nrow=2,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bula_masnahme.png", units="in", width=8, height=5, type="cairo-png")


# gesellschaftliche Solidarität###############################################################
                                        
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, zus_bestes:zus_schutzen, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, SD_BULA) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition, SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W3","W6","W9","W13","W14","W16","W17","W18","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Geben alle unser Bestes,\num Krisensituation zu überwinden", "Meisten sind sich einig,\ndass Zusammenhalt wichtig ist","Wir rücken zusammen\num die Schwachen zu schützen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1) +
  facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 trifft gar nicht zu - 5 trifft voll und ganz zu)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=3,nrow=2,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bula_solidar.png", units="in", width=8, height=5, type="cairo-png")

#Regierungskompetenzen: ################################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, komp_video:komp_appaufenth, factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

#mean line attention recoding 5= Sollte definitiv das Recht haben 1= Sollte definitiv nicht das Recht haben
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition, SD_BULA) %>%
  summarise(mean_measurement=survey_mean(5-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition, SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W1", "W2", "W4", "W12","W16","W17","W20","W23","W27")
levels(data_plot_long_mean$condition) <- c("Menschen per Video\n überwachen", "Infos über\nPersonen zu sammeln\nohne deren Wissen","Personen per\nHandyortung\nverfolgen/aufspüren","Unternehmen behördlich\nschließen","Ausgangssperren\nzu verhängen","Nicht-Einhaltung der Maßnahmen bestrafen","Mit App Aufenthalt von\npos. getesteten sammlen\nund veröffentlichen")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1) +
  #geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1) +
     facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Sollte definitiv nicht das Recht haben - 4 Sollte definitiv das Recht haben)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=4,nrow=2,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bula_kompetenzen.png", units="in", width=8, height=5, type="cairo-png")

#Stopp Corona app:##########################################################################################

#Stopp Corona benutzung:##########################################################################################                                          
lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(app_nutzlich,app_freundlich,app_schutz,app_pflicht), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

#mean line attention recoding 5= Trifft voll und ganz zu 1= Trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,SD_BULA) %>%
  summarise(mean_measurement=survey_mean(6-as.numeric(measurement),vartype = c("se"))) %>% group_by(wave,condition,SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave ) <- c("W4","W12","W16")
levels(data_plot_long_mean$condition) <- c("App ist nützlich", "App ist benutzerfreundlich","App schützt die Daten","App sollte verpflichtend werden")
#levels(data_plot_long$measurement) <- c("sehr groß", "groß", "mittelmäßig", "klein", "sehr klein")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1) +
   facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Einschätzung  \n (1 Trifft gar nicht zu - 5 Trifft voll und ganz zu )", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(colour=guide_legend(ncol=4,nrow=2,byrow=TRUE)) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2))
ggsave("figure1_mean_bula_appmeinung.png", units="in", width=8, height=5, type="cairo-png")


#Testen###########################################################################################################

lr_gen_w1 <- bern_data_long2_factored %>% filter(!is.na(WEIGHTD)) # droppen der aussteiger 

data_long <- gather(lr_gen_w1, condition, measurement, c(getestet_new), factor_key=TRUE)
data_long$measurement<-as.factor(data_long$measurement)

data_long$measurement <- fct_relevel(data_long$measurement, "Ich habe mich nicht testen lassen.","1 Mal", "2 Mal", "3 Mal", "4 Mal","Mehr als 4 Mal")

#mean line attention recoding 5= trifft voll und ganz zu 1= trifft gar nicht zu
data_plot_long_mean <- data_long  %>% filter(!is.na(measurement)) %>%
  as_survey_design(weights = c(WEIGHTD)) %>%
  group_by(wave,condition,SD_BULA) %>%
  summarise(mean_measurement=survey_mean(as.numeric(measurement)-1,vartype = c("se"))) %>% group_by(wave,condition,SD_BULA) %>%
     mutate(ymax=mean_measurement+1.96*mean_measurement_se, ymin=mean_measurement-1.96*mean_measurement_se)
data_plot_long_mean$wave<-as.factor(data_plot_long_mean$wave)

levels(data_plot_long_mean$wave) <-c("W19","W20","W21","W22","W23","W24","W25","W26","W27","W28","W29","W30","W31","W32","W33","W34")
levels(data_plot_long_mean$condition) <- c("Habe mich in d. letzten vier Wochen auf Covid-19 testen lassen")

cat("  \n")

# mean line
ggplot(data_plot_long_mean, aes(wave, mean_measurement, colour = condition)) +
  geom_line(aes(group = condition),size=1.2) +
  geom_errorbar(aes(ymin = ymin, ymax = ymax), width = 0.2,size=1.2) +
    facet_wrap(~SD_BULA, ncol=3) +
    scale_fill_brewer(palette = "RdYlBu") +  #alternative:Blues
    labs(y = "Anzahl getestet  \n (0 Mal - 5 Mehr als 4 Mal)", x= "",colour="") +
 #   scale_y_continuous(labels = scales::percent) +
     theme_hc() +
 #   theme(axis.text.x  = element_text(angle=45, hjust = 1)) +
    theme(legend.position="bottom") + 
    guides(fill=guide_legend(ncol=8,nrow=3,byrow=TRUE)) 
ggsave("figure1_mean_bula_testenl.png", units="in", width=8, height=5, type="cairo-png")

```


